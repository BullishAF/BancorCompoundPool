{
  "contractName": "TestBancorNetwork",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_onlyOwnerCanUpdateRegistry",
          "type": "bool"
        }
      ],
      "name": "restrictRegistryUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_register",
          "type": "bool"
        }
      ],
      "name": "registerEtherToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getReturnByPath",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvertFor2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onlyOwnerCanUpdateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convertForPrioritized4",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convert2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAffiliateFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "prevRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "xConvertPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "etherTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "conversionHashes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "xConvertPrioritized3",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONVERTER_CONVERSION_WHITELIST",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "convertFor2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "claimAndConvertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized3",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "restoreRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        }
      ],
      "name": "xConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "convertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "xConvert2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "name": "xConvertPrioritized2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_affiliateAccount",
          "type": "address"
        },
        {
          "name": "_affiliateFee",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvert2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "convert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxAffiliateFee",
          "type": "uint256"
        }
      ],
      "name": "setMaxAffiliateFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_smartToken",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_fromToken",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_toAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "Conversion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnOld",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnNew",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_onlyOwnerCanUpdateRegistry\",\"type\":\"bool\"}],\"name\":\"restrictRegistryUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_register\",\"type\":\"bool\"}],\"name\":\"registerEtherToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getReturnByPath\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"claimAndConvertFor2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onlyOwnerCanUpdateRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convertForPrioritized4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convert2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAffiliateFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prevRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"xConvertPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnNew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"conversionHashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"xConvertPrioritized3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONVERTER_CONVERSION_WHITELIST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnOld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"convertFor2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimAndConvertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"restoreRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"}],\"name\":\"xConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"claimAndConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"convertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"xConvert2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"xConvertPrioritized2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_affiliateAccount\",\"type\":\"address\"},{\"name\":\"_affiliateFee\",\"type\":\"uint256\"}],\"name\":\"claimAndConvert2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxAffiliateFee\",\"type\":\"uint256\"}],\"name\":\"setMaxAffiliateFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_smartToken\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_fromToken\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_toToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"Conversion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"claimAndConvert(address[],uint256,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"claimAndConvert2(address[],uint256,uint256,address,uint256)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network\\r by following a predefined conversion path and transfers the result tokens back to the sender\\r note that allowance must be set beforehand\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"claimAndConvertFor(address[],uint256,uint256,address)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"claimAndConvertFor2(address[],uint256,uint256,address,address,uint256)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network\\r by following a predefined conversion path and transfers the result tokens to a target account\\r note that allowance must be set beforehand\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_for\":\"account that will receive the conversion result\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convert(address[],uint256,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convert2(address[],uint256,uint256,address,uint256)\":{\"details\":\"converts the token to any other token in the bancor network by following\\r a predefined conversion path and transfers the result tokens back to the sender\\r note that the network should already own the source tokens\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convertFor(address[],uint256,uint256,address)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertFor2(address[],uint256,uint256,address,address,uint256)\":{\"details\":\"converts the token to any other token in the bancor network by following\\r a predefined conversion path and transfers the result tokens to a target account\\r note that the network should already own the source tokens\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_for\":\"account that will receive the conversion result\\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\"},\"return\":\"tokens issued in return\\r\"},\"convertForPrioritized(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized2(address[],uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"convertForPrioritized4(address[],uint256,uint256,address,uint256[],address,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"getReturnByPath(address[],uint256)\":{\"details\":\"calculates the expected return of converting a given amount on a given path\\r note that there is no support for circular paths\\r \\r\",\"params\":{\"_amount\":\"amount of _path[0] tokens received from the user\\r \\r\",\"_path\":\"conversion path (see conversion path format above)\\r\"},\"return\":\"amount of _path[_path.length - 1] tokens that the user will receive\\ramount of _path[_path.length - 1] tokens that the user will pay as fee\\r\"},\"registerEtherToken(address,bool)\":{\"details\":\"allows the owner to register/unregister ether tokens\\r \\r\",\"params\":{\"_register\":\"true to register, false to unregister\\r\",\"_token\":\"ether token contract address\\r\"}},\"restoreRegistry()\":{\"details\":\"restores the previous contract-registry\\r\"},\"restrictRegistryUpdate(bool)\":{\"details\":\"restricts the permission to update the contract-registry\\r \\r\",\"params\":{\"_onlyOwnerCanUpdateRegistry\":\"indicates whether or not permission is restricted to owner only\\r\"}},\"setMaxAffiliateFee(uint256)\":{\"details\":\"allows the owner to update the maximum affiliate-fee\\r \\r\",\"params\":{\"_maxAffiliateFee\":\"maximum affiliate-fee\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}},\"updateRegistry()\":{\"details\":\"updates to the new contract-registry\\r\"},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}},\"xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"xConvert2(address[],uint256,uint256,bytes32,bytes32,uint256,address,uint256)\":{\"details\":\"converts any other token to BNT in the bancor network\\r by following a predefined conversion path and transfers the resulting\\r tokens to BancorX.\\r note that the network should already have been given allowance of the source token (if not ETH)\\r \\r\",\"params\":{\"_affiliateAccount\":\"affiliate account\\r\",\"_affiliateFee\":\"affiliate fee in PPM\\r \\r\",\"_amount\":\"amount to convert from (in the initial source token)\\r\",\"_conversionId\":\"pre-determined unique (if non zero) id which refers to this transaction \\r\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\\r\",\"_path\":\"conversion path, see conversion path format above\\r\",\"_to\":\"address/account on _toBlockchain to send the BNT to\\r\",\"_toBlockchain\":\"blockchain BNT will be issued on\\r\"},\"return\":\"the amount of BNT received from this conversion\\r\"},\"xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"deprecated, backward compatibility\\r\"},\"xConvertPrioritized2(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[])\":{\"details\":\"deprecated, backward compatibility\\r\"},\"xConvertPrioritized3(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[],address,uint256)\":{\"details\":\"deprecated, backward compatibility\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/helpers/TestBancorNetwork.sol\":\"TestBancorNetwork\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/BancorNetwork.sol\":{\"keccak256\":\"0xdf7e3e7e9d053f4fa755c18e043bb590d4bc6c60de8f328eb84f8e4786d80064\",\"urls\":[\"bzzr://98d69badeefb017e07b901801df932176df144427251d1794a4ef2557fbb8bc7\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/FeatureIds.sol\":{\"keccak256\":\"0x7c8c461c4feff7146a36100c623931f505ed7d6a84da6e06101d72abbd6f28f9\",\"urls\":[\"bzzr://e7bf439f0b3e168b7c52f2f7781c12eb158c014bb8991b60a43bdf80b0e32df7\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/IBancorNetwork.sol\":{\"keccak256\":\"0x52ed708f139ff435337c3beca353deab7c0b9c1e32232f7fdc4097b1f74ae0dd\",\"urls\":[\"bzzr://c7a94b220430806991b3989f54f022777710b507b80488be0003a034236366d0\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/bancorx/interfaces/IBancorX.sol\":{\"keccak256\":\"0xdb2e0fafc4203ea144e285e534f5a4933b4b8ec684b7657733fa7134320d4902\",\"urls\":[\"bzzr://635f48e3900286c717cc3827c21b381d48139c057675222db44f565705441e2c\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/converter/interfaces/IBancorConverter.sol\":{\"keccak256\":\"0x9e1e02a129e0eb879bda228417c2e9bccae07676deb6dbcfdce7d46d067fa819\",\"urls\":[\"bzzr://37021010151718d744d7a3ef72f327e801e7f3e008b792b86d702cbe6641b863\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/converter/interfaces/IBancorFormula.sol\":{\"keccak256\":\"0x7f145979bb4246bfd348c9483e1243948b4fc590f26d001e379e0d3891251672\",\"urls\":[\"bzzr://7b84f791b9d0a2091ab50c8272cc04fdadbad08babb2d0eb8d70ceaab0b3b050\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/helpers/TestBancorNetwork.sol\":{\"keccak256\":\"0x04325bf432327796f32364718b76b982fe4e06addd1ddf5a1668117265df0d91\",\"urls\":[\"bzzr://3f51278b6455c8af55b8b3f7164b4a4f10baaf446145fc5265191bdcc915ef68\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xc1dbe021e4c5a19475048b9894ef9f1e25b922258724185ad051e54ad11c37cd\",\"urls\":[\"bzzr://f2c3cf6469aa2fdaff4b4c620f5404811d7a7c2db2231ca15e41b1b7b58526f9\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/token/interfaces/IEtherToken.sol\":{\"keccak256\":\"0x4de568303712548a552e56889af9e3c656ef675f30eb3543fa557511dbcd4585\",\"urls\":[\"bzzr://ca8826b76f8535fd9970ea8c157375033e09f76560b5975dc9dc7a302ce99597\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0xcd642e7946e6781417be0f80ce5c15249cc6a822ac1f393eba746edb57b2a51c\",\"urls\":[\"bzzr://729a3ef24b26d3425eca5a3b6dca9d902e4695ec03f1970937f9cec194d97b80\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0x625bca84d2d9d821993ab70286b8862a5dd5e314a15939012de4907ce2994b39\",\"urls\":[\"bzzr://6add47367a0d036ca02ea19688b73472ba2d0a762d1cbbb4ca8558ba98c702d6\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/ContractRegistryClient.sol\":{\"keccak256\":\"0xfce209bcb1d83fc370cc46f06fe00f1685f8df2a94e09634a691a72aef402ac1\",\"urls\":[\"bzzr://c8374faf30bc376588dbb7d56a0fa7428507c61168246e3db636ae0462220cc0\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/Owned.sol\":{\"keccak256\":\"0xce659c948fd6e652d14c1e98790fcbaac7e2b2cfb25f7fe40a723055f7403396\",\"urls\":[\"bzzr://c281f9a24b13a168b9e720444280dc9f125646e388d5a3e579a7850376f26c25\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0x3cc745bed1f0adbfc77c9b97470ed57d92a204e82bde521a1385f175bb7b72ba\",\"urls\":[\"bzzr://7d40829f07a663162f8f9b57ff8107f3c7f4dbb737ecd93ba20868b25c9af830\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0x88e04f516c4dd0d83973edfd7301785656217768b07453ab50586fc4df0441a9\",\"urls\":[\"bzzr://39d021980ecf43e4fc24a97af237a0c711d37c19eccef93b07ef4342ccd7ccfa\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0x6de760a463f6105446988b7bdcacc3dc525fdef4359a15a25cc0822e317c6b9a\",\"urls\":[\"bzzr://cbe079a4723e79f1b662a309c48ed9b32f4ce969b3dce2d080a151aef495c001\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/interfaces/IContractFeatures.sol\":{\"keccak256\":\"0xe9481c3b1f0d98181a5bd37e59ea9f2f0d459de505dd88a08f9572bc72fe60b0\",\"urls\":[\"bzzr://d34f6742954f858c69652c133da02fff5006f73d7e1e255dfe612abb50e2c992\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/interfaces/IContractRegistry.sol\":{\"keccak256\":\"0x292ecf7173e89cb87fa2ecc06064e4f789a208f29e2fb7ebed68776547673775\",\"urls\":[\"bzzr://ff28e7e7f9f18599b8bd6dd30ec8bead00914ea6bae187d98f33fa5b9e717cff\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x738d19fc1c5a71283c0bc400278e775b21c0cbf62c03852abde81ded30c9ba0f\",\"urls\":[\"bzzr://9064b8a0c73cdb04eb3c84519f8c53382881977c0b2de18532d9fa59148934de\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0xe652e6fb418265340bb9704e5ad9c33173de6ed6efc95114112915a8675ae9a3\",\"urls\":[\"bzzr://d537e87dd6bc47263da27a6a4e97fcebfc31bb5aa2e3a3d5082e3ef787a0e591\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/utility/interfaces/IWhitelist.sol\":{\"keccak256\":\"0x6623a077a89e9f56c18ade09c9ce490fa05080b3de2a18c8772fa443885a5255\",\"urls\":[\"bzzr://a03ec0f720b11a840ebec69965133ba9223a7a4e035e7cdcbf2e0d1f6293678d\"]}},\"version\":1}",
  "bytecode": "0x60806040526175306004553480156200001757600080fd5b50604051604080620031ed8339810160405280516020909101516000805433600160a060020a03199182161790915560028054821660019081179091556003805490921617905581620000696200010c565b90815260405190819003602001906000f0801580156200008d573d6000803e3d6000fd5b5060078054600160a060020a031916600160a060020a03929092169190911790558181620000ba6200011c565b9182526020820152604080519182900301906000f080158015620000e2573d6000803e3d6000fd5b5060088054600160a060020a031916600160a060020a0392909216919091179055506200012d9050565b60405160f28062002ff183390190565b60405161010a80620030e383390190565b612eb4806200013d6000396000f3006080604052600436106101cc5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663024c7ec781146101d157806302ef521e146101ed5780630c8496cc146102135780631134269a146102835780632978c10e146103125780632fe8a6ad1461038957806349d10b64146103b25780634de006cb146103c7578063569706eb146104735780635d732ff2146104d65780635e35359e146104eb57806361cd756e146105155780636896b99914610546578063699e7546146105c15780636b08f2ef146105d657806379ba50971461064d5780637b103999146106625780638077ccf71461067757806389e63a60146106985780638da5cb5b146106b05780638dc56657146106c557806392d1abb71461077357806398e9574014610788578063ab6214ce1461079d578063b1e9932b14610807578063b406d38614610283578063b4a176d314610872578063c52173de14610887578063c7ba24bc146108e6578063c98fefed14610944578063cb32564e146109a2578063ce20096314610a16578063d4ee1d9014610ab3578063e57738e514610ac8578063f2fde38b14610b38578063f3898a9714610b59578063f3bc7d2a14610baa575b600080fd5b3480156101dd57600080fd5b506101eb6004351515610bc2565b005b3480156101f957600080fd5b506101eb600160a060020a03600435166024351515610c23565b34801561021f57600080fd5b506040805160206004803580820135838102808601850190965280855261026a953695939460249493850192918291850190849080828437509497505093359450610cb29350505050565b6040805192835260208301919091528051918290030190f35b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611643565b60408051918252519081900360200190f35b34801561031e57600080fd5b50604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a03604082013581169350606082013516915060800135611662565b34801561039557600080fd5b5061039e6116a6565b604080519115158252519081900360200190f35b3480156103be57600080fd5b506101eb6116c7565b60408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437505060408051602060608901358a01803582810280850184018652818552999c8b359c848d01359c96870135600160a060020a03169b919a5098506080909501965092945081019282918501908490808284375094975050508335600160a060020a0316945050506020909101359050611865565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a036040820135169250606001359050611875565b3480156104e257600080fd5b5061030061188f565b3480156104f757600080fd5b506101eb600160a060020a0360043581169060243516604435611895565b34801561052157600080fd5b5061052a61198b565b60408051600160a060020a039092168252519081900360200190f35b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060808101359060a08101359060ff60c0820135169060e081013590610100013561199a565b3480156105cd57600080fd5b5061026a6119bc565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060ff6080820135169060a08101359060c001356119e1565b34801561065957600080fd5b506101eb6119ff565b34801561066e57600080fd5b5061052a611a87565b34801561068357600080fd5b5061039e600160a060020a0360043516611a96565b3480156106a457600080fd5b5061039e600435611aab565b3480156106bc57600080fd5b5061052a611ac0565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750506040805160a088013589018035602081810284810182018652828552999c8b359c828d01359c968701359b60608801359b5060808801359a50919850965060c0909501949281019282918501908490808284375094975050508335600160a060020a0316945050506020909101359050611acf565b34801561077f57600080fd5b50610300611ae1565b34801561079457600080fd5b5061026a611ae6565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a03604082013581169350606082013516915060800135611b03565b34801561081357600080fd5b5060408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611c729050565b34801561087e57600080fd5b506101eb611c8c565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060800135611cd4565b3480156108f257600080fd5b506040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020909201359150611cf29050565b60408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611d0a9050565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020830135926040810135925060608101359150608081013590600160a060020a0360a0820135169060c00135611d1b565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750506040805160a088013589018035602081810284810182018652828552999c8b359c828d01359c968701359b60608801359b5060808801359a50919850965060c09095019492810192829185019084908082843750949750611ea99650505050505050565b348015610abf57600080fd5b5061052a611ebc565b348015610ad457600080fd5b50604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a036040820135169250606001359050611ecb565b348015610b4457600080fd5b506101eb600160a060020a0360043516611edb565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020909201359150611f3c9050565b348015610bb657600080fd5b506101eb600435611f4c565b600054600160a060020a03163314610bd957600080fd5b6003805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600054600160a060020a03163314610c3a57600080fd5b81600160a060020a0381161515610c5057600080fd5b82600160a060020a038116301415610c6757600080fd5b5050600160a060020a0391909116600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000806000806000806000806000806000806000610cef7f42616e636f72466f726d756c6100000000000000000000000000000000000000611f78565b94508d9a5060028f51118015610d0a57508e51600290066001145b1515610d1557600080fd5b600293505b8e5184101561162e578e60028503815181101515610d3457fe5b9060200190602002015192508e60018503815181101515610d5157fe5b9060200190602002015191508e84815181101515610d6b57fe5b90602001906020020151905081600160a060020a031681600160a060020a03161415611185576003841080610dcc57508e60038503815181101515610dac57fe5b90602001906020020151600160a060020a031682600160a060020a031614155b15610ee25781600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e2857600080fd5b505af1158015610e3c573d6000803e3d6000fd5b505050506040513d6020811015610e5257600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051919a50600160a060020a03841691638da5cb5b916004808201926020929091908290030181600087803b158015610eb357600080fd5b505af1158015610ec7573d6000803e3d6000fd5b505050506040513d6020811015610edd57600080fd5b505195505b85600160a060020a031663d8959512846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f5657600080fd5b505af1158015610f6a573d6000803e3d6000fd5b505050506040513d6020811015610f8057600080fd5b5051604080517f0e53aae9000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301529151929a5090881691630e53aae99160248082019260a0929091908290030181600087803b158015610fea57600080fd5b505af1158015610ffe573d6000803e3d6000fd5b505050506040513d60a081101561101457600080fd5b50602090810151604080517f29a00e7c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905263ffffffff83166044820152606481018f90529051919950600160a060020a038816926329a00e7c926084808401938290030181600087803b15801561109557600080fd5b505af11580156110a9573d6000803e3d6000fd5b505050506040513d60208110156110bf57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919c5061117591620f42409161116991600160a060020a038b169163579cd3ca9160048083019260209291908290030181600087803b15801561112c57600080fd5b505af1158015611140573d6000803e3d6000fd5b505050506040513d602081101561115657600080fd5b50518e9063ffffffff9081169061201016565b9063ffffffff61204916565b9a8b90039a9950978a0197611623565b81600160a060020a031683600160a060020a0316141561154b5760038410806111da57508e600385038151811015156111ba57fe5b90602001906020020151600160a060020a031682600160a060020a031614155b156112f05781600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561123657600080fd5b505af115801561124a573d6000803e3d6000fd5b505050506040513d602081101561126057600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051919a50600160a060020a03841691638da5cb5b916004808201926020929091908290030181600087803b1580156112c157600080fd5b505af11580156112d5573d6000803e3d6000fd5b505050506040513d60208110156112eb57600080fd5b505195505b85600160a060020a031663d8959512826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561136457600080fd5b505af1158015611378573d6000803e3d6000fd5b505050506040513d602081101561138e57600080fd5b5051604080517f0e53aae9000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151929a5090881691630e53aae99160248082019260a0929091908290030181600087803b1580156113f857600080fd5b505af115801561140c573d6000803e3d6000fd5b505050506040513d60a081101561142257600080fd5b50602090810151604080517f49f9b0f7000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905263ffffffff83166044820152606481018f90529051919950600160a060020a038816926349f9b0f7926084808401938290030181600087803b1580156114a357600080fd5b505af11580156114b7573d6000803e3d6000fd5b505050506040513d60208110156114cd57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919c5061153a91620f42409161116991600160a060020a038b169163579cd3ca9160048083019260209291908290030181600087803b15801561112c57600080fd5b9950898b039a508a89039850611623565b600384108061158657508e6003850381518110151561156657fe5b90602001906020020151600160a060020a031682600160a060020a031614155b156116115781600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115e257600080fd5b505af11580156115f6573d6000803e3d6000fd5b505050506040513d602081101561160c57600080fd5b505195505b61161d8684838e61206c565b909b5099505b600284019350610d1a565b50989d979c50969a5050505050505050505050565b60006116548a8a8a8a600080611b03565b9a9950505050505050505050565b60008087600081518110151561167457fe5b90602001906020020151905061168c8133308a6121a3565b61169a888888888888611b03565b98975050505050505050565b60035474010000000000000000000000000000000000000000900460ff1681565b60008054600160a060020a03163314806116fc575060035474010000000000000000000000000000000000000000900460ff16155b151561170757600080fd5b6117307f436f6e7472616374526567697374727900000000000000000000000000000000611f78565b600254909150600160a060020a038083169116148015906117595750600160a060020a03811615155b151561176457600080fd5b604080517fbb34534c0000000000000000000000000000000000000000000000000000000081527f436f6e747261637452656769737472790000000000000000000000000000000060048201529051600091600160a060020a0384169163bb34534c9160248082019260209290919082900301818787803b1580156117e857600080fd5b505af11580156117fc573d6000803e3d6000fd5b505050506040513d602081101561181257600080fd5b5051600160a060020a0316141561182857600080fd5b6002805460038054600160a060020a0380841673ffffffffffffffffffffffffffffffffffffffff19928316179092559091169216919091179055565b600061169a888888888787611b03565b6000611885868686338787611b03565b9695505050505050565b60045481565b600054600160a060020a031633146118ac57600080fd5b82600160a060020a03811615156118c257600080fd5b82600160a060020a03811615156118d857600080fd5b83600160a060020a0381163014156118ef57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561196b57600080fd5b505af115801561197f573d6000803e3d6000fd5b50505050505050505050565b600354600160a060020a031681565b60006119ad8b8b8b8b8b8b600080611d1b565b9b9a5050505050505050505050565b60085460009081906119d990600160a060020a031682808061206c565b915091509091565b60006119f289898989600080611b03565b9998505050505050505050565b600154600160a060020a03163314611a1657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600254600160a060020a031681565b60056020526000908152604090205460ff1681565b60066020526000908152604090205460ff1681565b600054600160a060020a031681565b60006116548a8a8a8a8a8a8989611d1b565b600181565b60075460009081906119d990600160a060020a031682808061206c565b600080600060028951118015611b1b57506015895111155b8015611b2c57508851600290066001145b1515611b3757600080fd5b611b418987612434565b1515611b4c57600080fd5b611b70896000815181101515611b5e57fe5b90602001906020020151896000612711565b611b7d89898988886127d8565b91508860018a5103815181101515611b9157fe5b6020908102909101810151600160a060020a0381166000908152600590925260409091205490915060ff1615611c5a5780600160a060020a031663205c287887846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611c3d57600080fd5b505af1158015611c51573d6000803e3d6000fd5b50505050611c66565b611c66813088856121a3565b50979650505050505050565b6000611c8385858585600080611662565b95945050505050565b600054600160a060020a03163314611ca357600080fd5b6003546002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b6000611ce7878787878787600080611d1b565b979650505050505050565b6000611d02848484600080611ecb565b949350505050565b6000611c8385858585600080611b03565b60008060028a51118015611d31575060158a5111155b8015611d4257508951600290066001145b1515611d4d57600080fd5b611d767f424e54546f6b656e000000000000000000000000000000000000000000000000611f78565b600160a060020a03168a60018c5103815181101515611d9157fe5b60209081029091010151600160a060020a031614611dae57600080fd5b611dd28a6000815181101515611dc057fe5b906020019060200201518a6001612711565b611ddf8a8a8a87876127d8565b9050611e0a7f42616e636f725800000000000000000000000000000000000000000000000000611f78565b604080517f427c0374000000000000000000000000000000000000000000000000000000008152600481018a90526024810189905260448101849052606481018890529051600160a060020a03929092169163427c03749160848082019260009290919082900301818387803b158015611e8357600080fd5b505af1158015611e97573d6000803e3d6000fd5b50929c9b505050505050505050505050565b600061169a888888888888600080611d1b565b600154600160a060020a031681565b6000611885868686338787611662565b600054600160a060020a03163314611ef257600080fd5b600054600160a060020a0382811691161415611f0d57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000611d02848484600080611875565b600054600160a060020a03163314611f6357600080fd5b620f4240811115611f7357600080fd5b600455565b600254604080517fbb34534c000000000000000000000000000000000000000000000000000000008152600481018490529051600092600160a060020a03169163bb34534c91602480830192602092919082900301818787803b158015611fde57600080fd5b505af1158015611ff2573d6000803e3d6000fd5b505050506040513d602081101561200857600080fd5b505192915050565b6000808315156120235760009150612042565b5082820282848281151561203357fe5b041461203e57600080fd5b8091505b5092915050565b60008080831161205857600080fd5b828481151561206357fe5b04949350505050565b600080612077612e6d565b604080517f67657452657475726e28616464726573732c616464726573732c75696e74323581527f36290000000000000000000000000000000000000000000000000000000000006020808301919091528251918290036022018220600160a060020a03808b166024850152891660448401526064808401899052845180850390910181526084909301845290820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000009384900490930292909216919091178152815191929184918b5afa80151561218c57600080fd5b505080516020909101519097909650945050505050565b60008085600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561221a57600080fd5b505af115801561222e573d6000803e3d6000fd5b505050506040513d602081101561224457600080fd5b50519150600160a060020a0385163014156122f25785600160a060020a031663a9059cbb85856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156122d557600080fd5b505af11580156122e9573d6000803e3d6000fd5b5050505061237e565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301528681166024830152604482018690529151918816916323b872dd9160648082019260009290919082900301818387803b15801561236557600080fd5b505af1158015612379573d6000803e3d6000fd5b505050505b85600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156123f257600080fd5b505af1158015612406573d6000803e3d6000fd5b505050506040513d602081101561241c57600080fd5b5051905081811161242c57600080fd5b505050505050565b60008060008060006124657f436f6e7472616374466561747572657300000000000000000000000000000000611f78565b9350600192505b865183101561270257868381518110151561248357fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124e357600080fd5b505af11580156124f7573d6000803e3d6000fd5b505050506040513d602081101561250d57600080fd5b5051604080517fa5fbf287000000000000000000000000000000000000000000000000000000008152600160a060020a0380841660048301526001602483015291519294509086169163a5fbf287916044808201926020929091908290030181600087803b15801561257e57600080fd5b505af1158015612592573d6000803e3d6000fd5b505050506040513d60208110156125a857600080fd5b5051156126f75781600160a060020a031663c45d3d926040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561260657600080fd5b505af115801561261a573d6000803e3d6000fd5b505050506040513d602081101561263057600080fd5b50519050600160a060020a038116158015906126e9575080600160a060020a0316633af32abf876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156126bb57600080fd5b505af11580156126cf573d6000803e3d6000fd5b505050506040513d60208110156126e557600080fd5b5051155b156126f75760009450612707565b60028301925061246c565b600194505b5050505092915050565b60003411156127c15734821480156127415750600160a060020a03831660009081526005602052604090205460ff165b151561274c57600080fd5b82600160a060020a031663d0e30db0346040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303818588803b1580156127a357600080fd5b505af11580156127b7573d6000803e3d6000fd5b50505050506127d3565b80156127d3576127d3833330856121a3565b505050565b8451600090819086907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182808080600160a060020a038a16151561282b57881561282257600080fd5b60009350612874565b88600010801561283d57506004548911155b151561284857600080fd5b6128717f424e54546f6b656e000000000000000000000000000000000000000000000000611f78565b93505b600292505b848311612c96578c6001840381518110151561289157fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156128f157600080fd5b505af1158015612905573d6000803e3d6000fd5b505050506040513d602081101561291b57600080fd5b50518d519092508d907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe850190811061295057fe5b90602001906020020151600160a060020a03168d6001850381518110151561297457fe5b60209081029091010151600160a060020a0316146129b1576129b18d600285038151811015156129a057fe5b906020019060200201518388612ca7565b81600160a060020a0316635e5144eb8e600286038151811015156129d157fe5b906020019060200201518f868151811015156129e957fe5b9060200190602002015189898814612a02576001612a04565b8f5b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001828152602001945050505050602060405180830381600087803b158015612a8f57600080fd5b505af1158015612aa3573d6000803e3d6000fd5b505050506040513d6020811015612ab957600080fd5b50518d51909750600160a060020a038516908e9085908110612ad757fe5b90602001906020020151600160a060020a03161415612bdd57612b07620f4240611169898c63ffffffff61201016565b90508c83815181101515612b1757fe5b90602001906020020151600160a060020a031663a9059cbb8b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015612b9c57600080fd5b505af1158015612bb0573d6000803e3d6000fd5b505050506040513d6020811015612bc657600080fd5b50511515612bd357600080fd5b8087039650600093505b8c83815181101515612beb57fe5b90602001906020020151600160a060020a03168d60028503815181101515612c0f57fe5b90602001906020020151600160a060020a03168e60018603815181101515612c3357fe5b6020908102909101810151604080518b81529283018c9052338382015251600160a060020a03909116917f7154b38b5dd31bb3122436a96d4e09aba5b323ae1fd580025fab55074334c095919081900360600190a4869550600283019250612879565b50949b9a5050505050505050505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038481166024830152915160009286169163dd62ed3e91604480830192602092919082900301818787803b158015612d1257600080fd5b505af1158015612d26573d6000803e3d6000fd5b505050506040513d6020811015612d3c57600080fd5b5051905081811015612e67576000811115612dd257604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260006024830181905292519087169263095ea7b3926044808201939182900301818387803b158015612db957600080fd5b505af1158015612dcd573d6000803e3d6000fd5b505050505b83600160a060020a031663095ea7b384846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015612e4e57600080fd5b505af1158015612e62573d6000803e3d6000fd5b505050505b50505050565b604080518082018252906002908290803883395091929150505600a165627a7a72305820c963a2ad08f7a3383a624b5d0699ac4b35aca7adc6a74a053dcf908fe4a51edd0029608060405234801561001057600080fd5b506040516020806100f2833981016040525160005560bf806100336000396000f300608060405260043610603e5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e1401f881146043575b600080fd5b348015604e57600080fd5b50607773ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356089565b60408051918252519081900360200190f35b60005493925050505600a165627a7a72305820a47f8b41f6118b788e2d84823cdc7656af1067c8aa4530d82c66eb68ca6f09a20029608060405234801561001057600080fd5b5060405160408061010a83398101604052805160209091015160009190915560015560ca806100406000396000f300608060405260043610603e5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e1401f881146043575b600080fd5b348015604e57600080fd5b50607773ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356090565b6040805192835260208301919091528051918290030190f35b6000546001549350939150505600a165627a7a723058204a62c4728b69fdff42fb3371ded00a434e105da55ded05ce7ba29e64f5102ba10029",
  "deployedBytecode": "0x6080604052600436106101cc5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663024c7ec781146101d157806302ef521e146101ed5780630c8496cc146102135780631134269a146102835780632978c10e146103125780632fe8a6ad1461038957806349d10b64146103b25780634de006cb146103c7578063569706eb146104735780635d732ff2146104d65780635e35359e146104eb57806361cd756e146105155780636896b99914610546578063699e7546146105c15780636b08f2ef146105d657806379ba50971461064d5780637b103999146106625780638077ccf71461067757806389e63a60146106985780638da5cb5b146106b05780638dc56657146106c557806392d1abb71461077357806398e9574014610788578063ab6214ce1461079d578063b1e9932b14610807578063b406d38614610283578063b4a176d314610872578063c52173de14610887578063c7ba24bc146108e6578063c98fefed14610944578063cb32564e146109a2578063ce20096314610a16578063d4ee1d9014610ab3578063e57738e514610ac8578063f2fde38b14610b38578063f3898a9714610b59578063f3bc7d2a14610baa575b600080fd5b3480156101dd57600080fd5b506101eb6004351515610bc2565b005b3480156101f957600080fd5b506101eb600160a060020a03600435166024351515610c23565b34801561021f57600080fd5b506040805160206004803580820135838102808601850190965280855261026a953695939460249493850192918291850190849080828437509497505093359450610cb29350505050565b6040805192835260208301919091528051918290030190f35b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611643565b60408051918252519081900360200190f35b34801561031e57600080fd5b50604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a03604082013581169350606082013516915060800135611662565b34801561039557600080fd5b5061039e6116a6565b604080519115158252519081900360200190f35b3480156103be57600080fd5b506101eb6116c7565b60408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437505060408051602060608901358a01803582810280850184018652818552999c8b359c848d01359c96870135600160a060020a03169b919a5098506080909501965092945081019282918501908490808284375094975050508335600160a060020a0316945050506020909101359050611865565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a036040820135169250606001359050611875565b3480156104e257600080fd5b5061030061188f565b3480156104f757600080fd5b506101eb600160a060020a0360043581169060243516604435611895565b34801561052157600080fd5b5061052a61198b565b60408051600160a060020a039092168252519081900360200190f35b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060808101359060a08101359060ff60c0820135169060e081013590610100013561199a565b3480156105cd57600080fd5b5061026a6119bc565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060ff6080820135169060a08101359060c001356119e1565b34801561065957600080fd5b506101eb6119ff565b34801561066e57600080fd5b5061052a611a87565b34801561068357600080fd5b5061039e600160a060020a0360043516611a96565b3480156106a457600080fd5b5061039e600435611aab565b3480156106bc57600080fd5b5061052a611ac0565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750506040805160a088013589018035602081810284810182018652828552999c8b359c828d01359c968701359b60608801359b5060808801359a50919850965060c0909501949281019282918501908490808284375094975050508335600160a060020a0316945050506020909101359050611acf565b34801561077f57600080fd5b50610300611ae1565b34801561079457600080fd5b5061026a611ae6565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a03604082013581169350606082013516915060800135611b03565b34801561081357600080fd5b5060408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611c729050565b34801561087e57600080fd5b506101eb611c8c565b604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060800135611cd4565b3480156108f257600080fd5b506040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020909201359150611cf29050565b60408051602060048035808201358381028086018501909652808552610300953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a03169150611d0a9050565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020830135926040810135925060608101359150608081013590600160a060020a0360a0820135169060c00135611d1b565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750506040805160a088013589018035602081810284810182018652828552999c8b359c828d01359c968701359b60608801359b5060808801359a50919850965060c09095019492810192829185019084908082843750949750611ea99650505050505050565b348015610abf57600080fd5b5061052a611ebc565b348015610ad457600080fd5b50604080516020600480358082013583810280860185019096528085526103009536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a036040820135169250606001359050611ecb565b348015610b4457600080fd5b506101eb600160a060020a0360043516611edb565b6040805160206004803580820135838102808601850190965280855261030095369593946024949385019291829185019084908082843750949750508435955050506020909201359150611f3c9050565b348015610bb657600080fd5b506101eb600435611f4c565b600054600160a060020a03163314610bd957600080fd5b6003805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600054600160a060020a03163314610c3a57600080fd5b81600160a060020a0381161515610c5057600080fd5b82600160a060020a038116301415610c6757600080fd5b5050600160a060020a0391909116600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000806000806000806000806000806000806000610cef7f42616e636f72466f726d756c6100000000000000000000000000000000000000611f78565b94508d9a5060028f51118015610d0a57508e51600290066001145b1515610d1557600080fd5b600293505b8e5184101561162e578e60028503815181101515610d3457fe5b9060200190602002015192508e60018503815181101515610d5157fe5b9060200190602002015191508e84815181101515610d6b57fe5b90602001906020020151905081600160a060020a031681600160a060020a03161415611185576003841080610dcc57508e60038503815181101515610dac57fe5b90602001906020020151600160a060020a031682600160a060020a031614155b15610ee25781600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e2857600080fd5b505af1158015610e3c573d6000803e3d6000fd5b505050506040513d6020811015610e5257600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051919a50600160a060020a03841691638da5cb5b916004808201926020929091908290030181600087803b158015610eb357600080fd5b505af1158015610ec7573d6000803e3d6000fd5b505050506040513d6020811015610edd57600080fd5b505195505b85600160a060020a031663d8959512846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f5657600080fd5b505af1158015610f6a573d6000803e3d6000fd5b505050506040513d6020811015610f8057600080fd5b5051604080517f0e53aae9000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301529151929a5090881691630e53aae99160248082019260a0929091908290030181600087803b158015610fea57600080fd5b505af1158015610ffe573d6000803e3d6000fd5b505050506040513d60a081101561101457600080fd5b50602090810151604080517f29a00e7c000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905263ffffffff83166044820152606481018f90529051919950600160a060020a038816926329a00e7c926084808401938290030181600087803b15801561109557600080fd5b505af11580156110a9573d6000803e3d6000fd5b505050506040513d60208110156110bf57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919c5061117591620f42409161116991600160a060020a038b169163579cd3ca9160048083019260209291908290030181600087803b15801561112c57600080fd5b505af1158015611140573d6000803e3d6000fd5b505050506040513d602081101561115657600080fd5b50518e9063ffffffff9081169061201016565b9063ffffffff61204916565b9a8b90039a9950978a0197611623565b81600160a060020a031683600160a060020a0316141561154b5760038410806111da57508e600385038151811015156111ba57fe5b90602001906020020151600160a060020a031682600160a060020a031614155b156112f05781600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561123657600080fd5b505af115801561124a573d6000803e3d6000fd5b505050506040513d602081101561126057600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051919a50600160a060020a03841691638da5cb5b916004808201926020929091908290030181600087803b1580156112c157600080fd5b505af11580156112d5573d6000803e3d6000fd5b505050506040513d60208110156112eb57600080fd5b505195505b85600160a060020a031663d8959512826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561136457600080fd5b505af1158015611378573d6000803e3d6000fd5b505050506040513d602081101561138e57600080fd5b5051604080517f0e53aae9000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151929a5090881691630e53aae99160248082019260a0929091908290030181600087803b1580156113f857600080fd5b505af115801561140c573d6000803e3d6000fd5b505050506040513d60a081101561142257600080fd5b50602090810151604080517f49f9b0f7000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905263ffffffff83166044820152606481018f90529051919950600160a060020a038816926349f9b0f7926084808401938290030181600087803b1580156114a357600080fd5b505af11580156114b7573d6000803e3d6000fd5b505050506040513d60208110156114cd57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919c5061153a91620f42409161116991600160a060020a038b169163579cd3ca9160048083019260209291908290030181600087803b15801561112c57600080fd5b9950898b039a508a89039850611623565b600384108061158657508e6003850381518110151561156657fe5b90602001906020020151600160a060020a031682600160a060020a031614155b156116115781600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115e257600080fd5b505af11580156115f6573d6000803e3d6000fd5b505050506040513d602081101561160c57600080fd5b505195505b61161d8684838e61206c565b909b5099505b600284019350610d1a565b50989d979c50969a5050505050505050505050565b60006116548a8a8a8a600080611b03565b9a9950505050505050505050565b60008087600081518110151561167457fe5b90602001906020020151905061168c8133308a6121a3565b61169a888888888888611b03565b98975050505050505050565b60035474010000000000000000000000000000000000000000900460ff1681565b60008054600160a060020a03163314806116fc575060035474010000000000000000000000000000000000000000900460ff16155b151561170757600080fd5b6117307f436f6e7472616374526567697374727900000000000000000000000000000000611f78565b600254909150600160a060020a038083169116148015906117595750600160a060020a03811615155b151561176457600080fd5b604080517fbb34534c0000000000000000000000000000000000000000000000000000000081527f436f6e747261637452656769737472790000000000000000000000000000000060048201529051600091600160a060020a0384169163bb34534c9160248082019260209290919082900301818787803b1580156117e857600080fd5b505af11580156117fc573d6000803e3d6000fd5b505050506040513d602081101561181257600080fd5b5051600160a060020a0316141561182857600080fd5b6002805460038054600160a060020a0380841673ffffffffffffffffffffffffffffffffffffffff19928316179092559091169216919091179055565b600061169a888888888787611b03565b6000611885868686338787611b03565b9695505050505050565b60045481565b600054600160a060020a031633146118ac57600080fd5b82600160a060020a03811615156118c257600080fd5b82600160a060020a03811615156118d857600080fd5b83600160a060020a0381163014156118ef57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561196b57600080fd5b505af115801561197f573d6000803e3d6000fd5b50505050505050505050565b600354600160a060020a031681565b60006119ad8b8b8b8b8b8b600080611d1b565b9b9a5050505050505050505050565b60085460009081906119d990600160a060020a031682808061206c565b915091509091565b60006119f289898989600080611b03565b9998505050505050505050565b600154600160a060020a03163314611a1657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600254600160a060020a031681565b60056020526000908152604090205460ff1681565b60066020526000908152604090205460ff1681565b600054600160a060020a031681565b60006116548a8a8a8a8a8a8989611d1b565b600181565b60075460009081906119d990600160a060020a031682808061206c565b600080600060028951118015611b1b57506015895111155b8015611b2c57508851600290066001145b1515611b3757600080fd5b611b418987612434565b1515611b4c57600080fd5b611b70896000815181101515611b5e57fe5b90602001906020020151896000612711565b611b7d89898988886127d8565b91508860018a5103815181101515611b9157fe5b6020908102909101810151600160a060020a0381166000908152600590925260409091205490915060ff1615611c5a5780600160a060020a031663205c287887846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015611c3d57600080fd5b505af1158015611c51573d6000803e3d6000fd5b50505050611c66565b611c66813088856121a3565b50979650505050505050565b6000611c8385858585600080611662565b95945050505050565b600054600160a060020a03163314611ca357600080fd5b6003546002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b6000611ce7878787878787600080611d1b565b979650505050505050565b6000611d02848484600080611ecb565b949350505050565b6000611c8385858585600080611b03565b60008060028a51118015611d31575060158a5111155b8015611d4257508951600290066001145b1515611d4d57600080fd5b611d767f424e54546f6b656e000000000000000000000000000000000000000000000000611f78565b600160a060020a03168a60018c5103815181101515611d9157fe5b60209081029091010151600160a060020a031614611dae57600080fd5b611dd28a6000815181101515611dc057fe5b906020019060200201518a6001612711565b611ddf8a8a8a87876127d8565b9050611e0a7f42616e636f725800000000000000000000000000000000000000000000000000611f78565b604080517f427c0374000000000000000000000000000000000000000000000000000000008152600481018a90526024810189905260448101849052606481018890529051600160a060020a03929092169163427c03749160848082019260009290919082900301818387803b158015611e8357600080fd5b505af1158015611e97573d6000803e3d6000fd5b50929c9b505050505050505050505050565b600061169a888888888888600080611d1b565b600154600160a060020a031681565b6000611885868686338787611662565b600054600160a060020a03163314611ef257600080fd5b600054600160a060020a0382811691161415611f0d57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000611d02848484600080611875565b600054600160a060020a03163314611f6357600080fd5b620f4240811115611f7357600080fd5b600455565b600254604080517fbb34534c000000000000000000000000000000000000000000000000000000008152600481018490529051600092600160a060020a03169163bb34534c91602480830192602092919082900301818787803b158015611fde57600080fd5b505af1158015611ff2573d6000803e3d6000fd5b505050506040513d602081101561200857600080fd5b505192915050565b6000808315156120235760009150612042565b5082820282848281151561203357fe5b041461203e57600080fd5b8091505b5092915050565b60008080831161205857600080fd5b828481151561206357fe5b04949350505050565b600080612077612e6d565b604080517f67657452657475726e28616464726573732c616464726573732c75696e74323581527f36290000000000000000000000000000000000000000000000000000000000006020808301919091528251918290036022018220600160a060020a03808b166024850152891660448401526064808401899052845180850390910181526084909301845290820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000009384900490930292909216919091178152815191929184918b5afa80151561218c57600080fd5b505080516020909101519097909650945050505050565b60008085600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561221a57600080fd5b505af115801561222e573d6000803e3d6000fd5b505050506040513d602081101561224457600080fd5b50519150600160a060020a0385163014156122f25785600160a060020a031663a9059cbb85856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156122d557600080fd5b505af11580156122e9573d6000803e3d6000fd5b5050505061237e565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301528681166024830152604482018690529151918816916323b872dd9160648082019260009290919082900301818387803b15801561236557600080fd5b505af1158015612379573d6000803e3d6000fd5b505050505b85600160a060020a03166370a08231856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156123f257600080fd5b505af1158015612406573d6000803e3d6000fd5b505050506040513d602081101561241c57600080fd5b5051905081811161242c57600080fd5b505050505050565b60008060008060006124657f436f6e7472616374466561747572657300000000000000000000000000000000611f78565b9350600192505b865183101561270257868381518110151561248357fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124e357600080fd5b505af11580156124f7573d6000803e3d6000fd5b505050506040513d602081101561250d57600080fd5b5051604080517fa5fbf287000000000000000000000000000000000000000000000000000000008152600160a060020a0380841660048301526001602483015291519294509086169163a5fbf287916044808201926020929091908290030181600087803b15801561257e57600080fd5b505af1158015612592573d6000803e3d6000fd5b505050506040513d60208110156125a857600080fd5b5051156126f75781600160a060020a031663c45d3d926040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561260657600080fd5b505af115801561261a573d6000803e3d6000fd5b505050506040513d602081101561263057600080fd5b50519050600160a060020a038116158015906126e9575080600160a060020a0316633af32abf876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156126bb57600080fd5b505af11580156126cf573d6000803e3d6000fd5b505050506040513d60208110156126e557600080fd5b5051155b156126f75760009450612707565b60028301925061246c565b600194505b5050505092915050565b60003411156127c15734821480156127415750600160a060020a03831660009081526005602052604090205460ff165b151561274c57600080fd5b82600160a060020a031663d0e30db0346040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303818588803b1580156127a357600080fd5b505af11580156127b7573d6000803e3d6000fd5b50505050506127d3565b80156127d3576127d3833330856121a3565b505050565b8451600090819086907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182808080600160a060020a038a16151561282b57881561282257600080fd5b60009350612874565b88600010801561283d57506004548911155b151561284857600080fd5b6128717f424e54546f6b656e000000000000000000000000000000000000000000000000611f78565b93505b600292505b848311612c96578c6001840381518110151561289157fe5b90602001906020020151600160a060020a0316638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156128f157600080fd5b505af1158015612905573d6000803e3d6000fd5b505050506040513d602081101561291b57600080fd5b50518d519092508d907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe850190811061295057fe5b90602001906020020151600160a060020a03168d6001850381518110151561297457fe5b60209081029091010151600160a060020a0316146129b1576129b18d600285038151811015156129a057fe5b906020019060200201518388612ca7565b81600160a060020a0316635e5144eb8e600286038151811015156129d157fe5b906020019060200201518f868151811015156129e957fe5b9060200190602002015189898814612a02576001612a04565b8f5b6040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001828152602001945050505050602060405180830381600087803b158015612a8f57600080fd5b505af1158015612aa3573d6000803e3d6000fd5b505050506040513d6020811015612ab957600080fd5b50518d51909750600160a060020a038516908e9085908110612ad757fe5b90602001906020020151600160a060020a03161415612bdd57612b07620f4240611169898c63ffffffff61201016565b90508c83815181101515612b1757fe5b90602001906020020151600160a060020a031663a9059cbb8b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015612b9c57600080fd5b505af1158015612bb0573d6000803e3d6000fd5b505050506040513d6020811015612bc657600080fd5b50511515612bd357600080fd5b8087039650600093505b8c83815181101515612beb57fe5b90602001906020020151600160a060020a03168d60028503815181101515612c0f57fe5b90602001906020020151600160a060020a03168e60018603815181101515612c3357fe5b6020908102909101810151604080518b81529283018c9052338382015251600160a060020a03909116917f7154b38b5dd31bb3122436a96d4e09aba5b323ae1fd580025fab55074334c095919081900360600190a4869550600283019250612879565b50949b9a5050505050505050505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038481166024830152915160009286169163dd62ed3e91604480830192602092919082900301818787803b158015612d1257600080fd5b505af1158015612d26573d6000803e3d6000fd5b505050506040513d6020811015612d3c57600080fd5b5051905081811015612e67576000811115612dd257604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260006024830181905292519087169263095ea7b3926044808201939182900301818387803b158015612db957600080fd5b505af1158015612dcd573d6000803e3d6000fd5b505050505b83600160a060020a031663095ea7b384846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015612e4e57600080fd5b505af1158015612e62573d6000803e3d6000fd5b505050505b50505050565b604080518082018252906002908290803883395091929150505600a165627a7a72305820c963a2ad08f7a3383a624b5d0699ac4b35aca7adc6a74a053dcf908fe4a51edd0029",
  "sourceMap": "815:741:25:-;;;2010:5:0;1977:38;;968:232:25;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:232:25;;;;;;;;;;;;;;;;;;;559:5:44;:18;;567:10;-1:-1:-1;;;;;;559:18:44;;;;;;;1833:8:43;:39;;;;-1:-1:-1;1833:39:43;;;;;;1883:12;:43;;;;;;;;968:232:25;1094:31;;:::i;:::-;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1073:18:25;:52;;-1:-1:-1;;;;;;1073:52:25;-1:-1:-1;;;;;1073:52:25;;;;;;;;;;1179:7;1188:4;1156:37;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1156:37:25;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1135:18:25;:58;;-1:-1:-1;;;;;;1135:58:25;-1:-1:-1;;;;;1135:58:25;;;;;;;;;;-1:-1:-1;815:741:25;;-1:-1:-1;815:741:25;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "815:741:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3307:224:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3307:224:43;;;;;;;;;3820:209:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3820:209:0;-1:-1:-1;;;;;3820:209:0;;;;;;;;;12283:2965;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12283:2965:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12283:2965:0;;-1:-1:-1;;12283:2965:0;;;-1:-1:-1;12283:2965:0;;-1:-1:-1;;;;12283:2965:0;;;;;;;;;;;;;;;;;;;;;;;;27060:367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27060:367:0;;-1:-1:-1;;27060:367:0;;;-1:-1:-1;;;27060:367:0;;;;;-1:-1:-1;;;;;27060:367:0;;;;;;-1:-1:-1;27060:367:0;;;;;-1:-1:-1;27060:367:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16104:631;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16104:631:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16104:631:0;;-1:-1:-1;;16104:631:0;;;-1:-1:-1;;;16104:631:0;;;;;-1:-1:-1;;;;;16104:631:0;;;;;;;-1:-1:-1;16104:631:0;;;;;;-1:-1:-1;16104:631:0;;;;;1218:38:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1218:38:43;;;;;;;;;;;;;;;;;;;;;;2011:865;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2011:865:43;;;;25672:412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25672:412:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25672:412:0;;;;-1:-1:-1;25672:412:0;-1:-1:-1;25672:412:0;;;;;-1:-1:-1;25672:412:0;;-1:-1:-1;25672:412:0;;;;;;;;;;;;;;-1:-1:-1;25672:412:0;;-1:-1:-1;;;25672:412:0;;-1:-1:-1;;;;;25672:412:0;;-1:-1:-1;;;25672:412:0;;;;;;-1:-1:-1;25672:412:0;;17498:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17498:270:0;;-1:-1:-1;;17498:270:0;;;-1:-1:-1;;;17498:270:0;;;;;-1:-1:-1;;;;;17498:270:0;;;;;;-1:-1:-1;17498:270:0;;;;-1:-1:-1;17498:270:0;;1977:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1977:38:0;;;;1263:260:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1263:260:46;-1:-1:-1;;;;;1263:260:46;;;;;;;;;;;;1128:37:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:37:43;;;;;;;;-1:-1:-1;;;;;1128:37:43;;;;;;;;;;;;;;25143:455:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25143:455:0;;-1:-1:-1;;25143:455:0;;;-1:-1:-1;;;25143:455:0;;;;;;;;;;-1:-1:-1;25143:455:0;;;;;-1:-1:-1;25143:455:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:171:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1383:171:25;;;;26618:368:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26618:368:0;;-1:-1:-1;;26618:368:0;;;-1:-1:-1;;;26618:368:0;;;;;-1:-1:-1;;;;;26618:368:0;;;;;;-1:-1:-1;26618:368:0;;;;;-1:-1:-1;26618:368:0;;;;;;;;;;;;;;;;;1193:187:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:187:44;;;;1039:33:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:33:43;;;;2053:44:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2053:44:0;-1:-1:-1;;;;;2053:44:0;;;;;2148:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2148:49:0;;;;;167:20:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:20:44;;;;24082:500:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24082:500:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24082:500:0;;;;;-1:-1:-1;24082:500:0;;-1:-1:-1;24082:500:0;-1:-1:-1;24082:500:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24082:500:0;;-1:-1:-1;;;24082:500:0;;-1:-1:-1;;;;;24082:500:0;;-1:-1:-1;;;24082:500:0;;;;;;-1:-1:-1;24082:500:0;;268:63:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:63:2;;;;1206:171:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1206:171:25;;;;4878:1220:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4878:1220:0;;-1:-1:-1;;4878:1220:0;;;-1:-1:-1;;;4878:1220:0;;;;;-1:-1:-1;;;;;4878:1220:0;;;;;;;-1:-1:-1;4878:1220:0;;;;;;-1:-1:-1;4878:1220:0;;;;;23293:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23293:267:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23293:267:0;;-1:-1:-1;;23293:267:0;;;-1:-1:-1;;;23293:267:0;;;;;;;;-1:-1:-1;;;;;23293:267:0;;-1:-1:-1;23293:267:0;;-1:-1:-1;23293:267:0;2955:137:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2955:137:43;;;;23634:374:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23634:374:0;;-1:-1:-1;;23634:374:0;;;-1:-1:-1;;;23634:374:0;;;;;;;;;;-1:-1:-1;23634:374:0;;;;;-1:-1:-1;23634:374:0;;;;;22654:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22654:232:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22654:232:0;;-1:-1:-1;;22654:232:0;;;-1:-1:-1;;;22654:232:0;;;;;;-1:-1:-1;22654:232:0;;-1:-1:-1;22654:232:0;22960:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22960:259:0;;-1:-1:-1;;22960:259:0;;;-1:-1:-1;;;22960:259:0;;;;;;;;-1:-1:-1;;;;;22960:259:0;;-1:-1:-1;22960:259:0;;-1:-1:-1;22960:259:0;7190:1053;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7190:1053:0;;-1:-1:-1;;7190:1053:0;;;-1:-1:-1;;;7190:1053:0;;;;;;;;;;-1:-1:-1;7190:1053:0;;;;;-1:-1:-1;7190:1053:0;;;;;-1:-1:-1;;;;;7190:1053:0;;;;;;;;;;;24656:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24656:413:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24656:413:0;;;;;-1:-1:-1;24656:413:0;;-1:-1:-1;24656:413:0;-1:-1:-1;24656:413:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24656:413:0;;-1:-1:-1;24656:413:0;;-1:-1:-1;;;;;;;24656:413:0;194:23:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:23:44;;;;18538:278:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18538:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18538:278:0;;-1:-1:-1;;18538:278:0;;;-1:-1:-1;;;18538:278:0;;;;;-1:-1:-1;;;;;18538:278:0;;;;;;-1:-1:-1;18538:278:0;;;;-1:-1:-1;18538:278:0;;962:140:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;962:140:44;-1:-1:-1;;;;;962:140:44;;;;;22356:224:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22356:224:0;;-1:-1:-1;;22356:224:0;;;-1:-1:-1;;;22356:224:0;;;;;;-1:-1:-1;22356:224:0;;-1:-1:-1;22356:224:0;3382:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3382:211:0;;;;;3307:224:43;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;3467:26:43;:56;;;;;;;;;;;;;;;;;3307:224::o;3820:209:0:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;3941:6:0;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;3966:6:0;-1:-1:-1;;;;;636:25:47;;656:4;636:25;;628:34;;;;;;-1:-1:-1;;;;;;;3990:19:0;;;;;;;;:11;:19;;;;;:31;;;;;;;;;;;;;3820:209::o;12283:2965::-;12367:7;12376;12396:14;12421:11;12443:14;12468:15;12494:12;12517:26;12554:22;12847:9;12903:21;12954:22;13006:19;12594:25;12604:14;12594:9;:25::i;:::-;12554:66;;12642:7;12633:16;;12757:1;12742:5;:12;:16;:41;;;;-1:-1:-1;12762:12:0;;12777:1;;12762:16;12782:1;12762:21;12742:41;12734:50;;;;;;;;12859:1;12847:13;;12842:2366;12866:5;:12;12862:1;:16;12842:2366;;;12927:5;12937:1;12933;:5;12927:12;;;;;;;;;;;;;;;;;;12903:36;;12979:5;12989:1;12985;:5;12979:12;;;;;;;;;;;;;;;;;;12954:37;;13028:5;13034:1;13028:8;;;;;;;;;;;;;;;;;;13006:30;;13068:10;-1:-1:-1;;;;;13057:21:0;:7;-1:-1:-1;;;;;13057:21:0;;13053:2144;;;13195:1;13191;:5;:35;;;;13214:5;13224:1;13220;:5;13214:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13200:26:0;:10;-1:-1:-1;;;;;13200:26:0;;;13191:35;13187:201;;;13260:10;-1:-1:-1;;;;;13260:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13260:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13260:24:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13260:24:0;13336:31;;;;;;;;13260:24;;-1:-1:-1;;;;;;13336:29:0;;;;;:31;;;;;13260:24;;13336:31;;;;;;;;;:29;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;13336:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13336:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13336:31:0;;-1:-1:-1;13187:201:0;13480:9;-1:-1:-1;;;;;13480:29:0;;13510:9;13480:40;;;;;;;;;;;;;-1:-1:-1;;;;;13480:40:0;-1:-1:-1;;;;;13480:40:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13480:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13480:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13480:40:0;13557:31;;;;;;-1:-1:-1;;;;;13557:31:0;;;;;;;;;13480:40;;-1:-1:-1;13557:20:0;;;;;;:31;;;;;;;;;;;;;;;-1:-1:-1;13557:20:0;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;13557:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13557:31:0;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;13557:31:0;;;;;;13616:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13557:31;;-1:-1:-1;;;;;;13616:31:0;;;;;:63;;;;;;;;;;-1:-1:-1;13616:31:0;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;13616:63:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13616:63:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13616:63:0;13715:25;;;;;;;;13616:63;;-1:-1:-1;13704:68:0;;1895:7;;13704:37;;-1:-1:-1;;;;;13715:23:0;;;;;:25;;;;;13616:63;;13715:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;13715:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13715:25:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13715:25:0;13704:6;;:37;;;;;:10;:37;:::i;:::-;:41;:68;:41;:68;:::i;:::-;13791:13;;;;;13698:74;-1:-1:-1;13898:16:0;;;;13053:2144;;;13966:10;-1:-1:-1;;;;;13953:23:0;:9;-1:-1:-1;;;;;13953:23:0;;13949:1248;;;14094:1;14090;:5;:35;;;;14113:5;14123:1;14119;:5;14113:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14099:26:0;:10;-1:-1:-1;;;;;14099:26:0;;;14090:35;14086:201;;;14159:10;-1:-1:-1;;;;;14159:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14159:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14159:24:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14159:24:0;14235:31;;;;;;;;14159:24;;-1:-1:-1;;;;;;14235:29:0;;;;;:31;;;;;14159:24;;14235:31;;;;;;;;;:29;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;14235:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14235:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14235:31:0;;-1:-1:-1;14086:201:0;14379:9;-1:-1:-1;;;;;14379:29:0;;14409:7;14379:38;;;;;;;;;;;;;-1:-1:-1;;;;;14379:38:0;-1:-1:-1;;;;;14379:38:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14379:38:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14379:38:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14379:38:0;14454:29;;;;;;-1:-1:-1;;;;;14454:29:0;;;;;;;;;14379:38;;-1:-1:-1;14454:20:0;;;;;;:29;;;;;;;;;;;;;;;-1:-1:-1;14454:20:0;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;14454:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14454:29:0;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;14454:29:0;;;;;;14511:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14454:29;;-1:-1:-1;;;;;;14511:27:0;;;;;:59;;;;;;;;;;-1:-1:-1;14511:27:0;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;14511:59:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14511:59:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14511:59:0;14606:25;;;;;;;;14511:59;;-1:-1:-1;14595:68:0;;1895:7;;14595:37;;-1:-1:-1;;;;;14606:23:0;;;;;:25;;;;;14511:59;;14606:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;14595:68:0;14589:74;;14692:3;14682:13;;;;14799:6;14789:16;;;;13949:1248;;;14960:1;14956;:5;:35;;;;14979:5;14989:1;14985;:5;14979:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14965:26:0;:10;-1:-1:-1;;;;;14965:26:0;;;14956:35;14952:145;;;15057:10;-1:-1:-1;;;;;15045:29:0;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15045:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15045:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15045:31:0;;-1:-1:-1;14952:145:0;15133:48;15143:9;15154;15165:7;15174:6;15133:9;:48::i;:::-;15117:64;;-1:-1:-1;15117:64:0;-1:-1:-1;13949:1248:0;12885:1;12880:6;;;;12842:2366;;;-1:-1:-1;15228:6:0;;15236:3;;-1:-1:-1;12283:2965:0;;-1:-1:-1;;;;;;;;;;;12283:2965:0:o;27060:367::-;27327:7;27359:60;27371:5;27378:7;27387:10;27399:4;27413:1;27417;27359:11;:60::i;:::-;27352:67;27060:367;-1:-1:-1;;;;;;;;;;27060:367:0:o;16104:631::-;16271:7;16531:21;16555:5;16561:1;16555:8;;;;;;;;;;;;;;;;;;16531:32;;16574:56;16593:9;16604:10;16616:4;16622:7;16574:18;:56::i;:::-;16648:79;16660:5;16667:7;16676:10;16688:4;16694:17;16713:13;16648:11;:79::i;:::-;16641:86;16104:631;-1:-1:-1;;;;;;;;16104:631:0:o;1218:38:43:-;;;;;;;;;:::o;2011:865::-;2220:19;2128:5;;-1:-1:-1;;;;;2128:5:43;2114:10;:19;;:50;;-1:-1:-1;2138:26:43;;;;;;;2137:27;2114:50;2106:59;;;;;;;;2242:28;2252:17;2242:9;:28::i;:::-;2390:8;;2220:50;;-1:-1:-1;;;;;;2367:32:43;;;2390:8;;2367:32;;;;:61;;-1:-1:-1;;;;;;2403:25:43;;;;2367:61;2359:70;;;;;;;;2544:59;;;;;;2585:17;2544:59;;;;;;2615:1;;-1:-1:-1;;;;;2544:40:43;;;;;:59;;;;;;;;;;;;;;;2615:1;2544:40;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;2544:59:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2544:59:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2544:59:43;-1:-1:-1;;;;;2544:73:43;;;2536:82;;;;;;2725:8;;;2710:12;:23;;-1:-1:-1;;;;;2725:8:43;;;-1:-1:-1;;2710:23:43;;;;;;;2827:41;;;;;;;;;;;2011:865::o;25672:412:0:-;25965:7;25997:79;26009:5;26016:7;26025:10;26037:4;26043:17;26062:13;25997:11;:79::i;17498:270::-;17648:7;17675:85;17687:5;17694:7;17703:10;17715;17727:17;17746:13;17675:11;:85::i;:::-;17668:92;17498:270;-1:-1:-1;;;;;;17498:270:0:o;1977:38::-;;;;:::o;1263:260:46:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1394:6:46;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;1424:3:46;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;1446:3:46;-1:-1:-1;;;;;636:25:47;;656:4;636:25;;628:34;;;;;;1485:6:46;-1:-1:-1;;;;;1467:34:46;;1502:3;1507:7;1467:48;;;;;;;;;;;;;-1:-1:-1;;;;;1467:48:46;-1:-1:-1;;;;;1467:48:46;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1467:48:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1467:48:46;;;;491:1:47;;705::44;1263:260:46;;;:::o;1128:37:43:-;;;-1:-1:-1;;;;;1128:37:43;;:::o;25143:455:0:-;25471:7;25503:87;25513:5;25520:7;25529:10;25541:13;25556:3;25561:13;25584:1;25588;25503:9;:87::i;:::-;25496:94;25143:455;-1:-1:-1;;;;;;;;;;;25143:455:0:o;1383:171:25:-;1483:18;;1430:7;;;;1465:82;;-1:-1:-1;;;;;1483:18:25;1430:7;;;1465:9;:82::i;:::-;1458:89;;;;1383:171;;:::o;26618:368:0:-;26886:7;26918:60;26930:5;26937:7;26946:10;26958:4;26972:1;26976;26918:11;:60::i;:::-;26911:67;26618:368;-1:-1:-1;;;;;;;;;26618:368:0:o;1193:187:44:-;1260:8;;-1:-1:-1;;;;;1260:8:44;1246:10;:22;1238:31;;;;;;1304:8;;;1297:5;;1285:28;;-1:-1:-1;;;;;1304:8:44;;;;1297:5;;;;1285:28;;;1332:8;;;;1324:16;;-1:-1:-1;;1324:16:44;;;-1:-1:-1;;;;;1332:8:44;;1324:16;;;;1351:21;;;1193:187::o;1039:33:43:-;;;-1:-1:-1;;;;;1039:33:43;;:::o;2053:44:0:-;;;;;;;;;;;;;;;:::o;2148:49::-;;;;;;;;;;;;;;;:::o;167:20:44:-;;;-1:-1:-1;;;;;167:20:44;;:::o;24082:500:0:-;24436:7;24468:106;24478:5;24485:7;24494:10;24506:13;24521:3;24526:13;24541:17;24560:13;24468:9;:106::i;268:63:2:-;325:6;268:63;:::o;1206:171:25:-;1306:18;;1253:7;;;;1288:82;;-1:-1:-1;;;;;1306:18:25;1253:7;;;1288:9;:82::i;4878:1220:0:-;5045:7;5524:14;5848:19;5182:1;5167:5;:12;:16;:48;;;;;5204:10;5187:5;:12;:28;;5167:48;:73;;;;-1:-1:-1;5219:12:0;;5234:1;;5219:16;5239:1;5219:21;5167:73;5159:82;;;;;;;;5356:26;5370:5;5377:4;5356:13;:26::i;:::-;5348:35;;;;;;;;5425:37;5437:5;5443:1;5437:8;;;;;;;;;;;;;;;;;;5447:7;5456:5;5425:11;:37::i;:::-;5541:75;5555:5;5562:7;5571:10;5583:17;5602:13;5541;:75::i;:::-;5524:92;;5870:5;5891:1;5876:5;:12;:16;5870:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5908:20:0;;;;;;:11;:20;;;;;;;;5870:23;;-1:-1:-1;5908:20:0;;5904:160;;;5955:7;-1:-1:-1;;;;;5943:31:0;;5975:4;5981:6;5943:45;;;;;;;;;;;;;-1:-1:-1;;;;;5943:45:0;-1:-1:-1;;;;;5943:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5943:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5943:45:0;;;;5904:160;;;6017:47;6036:7;6045:4;6051;6057:6;6017:18;:47::i;:::-;-1:-1:-1;6084:6:0;4878:1220;-1:-1:-1;;;;;;;4878:1220:0:o;23293:267::-;23452:7;23484:68;23504:5;23511:7;23520:10;23532:4;23546:1;23550;23484:19;:68::i;:::-;23477:75;23293:267;-1:-1:-1;;;;;23293:267:0:o;2955:137:43:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;3072:12:43;;3061:8;:23;;-1:-1:-1;;3061:23:43;-1:-1:-1;;;;;3072:12:43;;;3061:23;;;;;;2955:137::o;23634:374:0:-;23881:7;23913:87;23923:5;23930:7;23939:10;23951:13;23966:3;23971:13;23994:1;23998;23913:9;:87::i;:::-;23906:94;23634:374;-1:-1:-1;;;;;;;23634:374:0:o;22654:232::-;22787:7;22819:59;22836:5;22843:7;22852:10;22872:1;22876;22819:16;:59::i;:::-;22812:66;22654:232;-1:-1:-1;;;;22654:232:0:o;22960:259::-;23119:7;23151:60;23163:5;23170:7;23179:10;23191:4;23205:1;23209;23151:11;:60::i;7190:1053::-;7506:7;7969:14;7648:1;7633:5;:12;:16;:48;;;;;7670:10;7653:5;:12;:28;;7633:48;:73;;;;-1:-1:-1;7685:12:0;;7700:1;;7685:16;7705:1;7685:21;7633:73;7625:82;;;;;;;;7808:20;7818:9;7808;:20::i;:::-;-1:-1:-1;;;;;7781:47:0;:5;7802:1;7787:5;:12;:16;7781:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7781:47:0;;7773:56;;;;;;7871:36;7883:5;7889:1;7883:8;;;;;;;;;;;;;;;;;;7893:7;7902:4;7871:11;:36::i;:::-;7986:75;8000:5;8007:7;8016:10;8028:17;8047:13;7986;:75::i;:::-;7969:92;;8136:19;8146:8;8136:9;:19::i;:::-;8127:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8127:39:0;;;;;;;:82;;;;;;;;;;;;;;;;:39;:82;;;5:2:-1;;;;30:1;27;20:12;5:2;8127:82:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;8229:6:0;;7190:1053;-1:-1:-1;;;;;;;;;;;;7190:1053:0:o;24656:413::-;24942:7;24974:87;24984:5;24991:7;25000:10;25012:13;25027:3;25032:13;25055:1;25059;24974:9;:87::i;194:23:44:-;;;-1:-1:-1;;;;;194:23:44;;:::o;18538:278:0:-;18688:7;18715:93;18735:5;18742:7;18751:10;18763;18775:17;18794:13;18715:19;:93::i;962:140:44:-;688:5;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1057:5;;-1:-1:-1;;;;;1044:18:44;;;1057:5;;1044:18;;1036:27;;;;;;1074:8;:20;;-1:-1:-1;;1074:20:44;-1:-1:-1;;;;;1074:20:44;;;;;;;;;;962:140::o;22356:224:0:-;22489:7;22521:51;22530:5;22537:7;22546:10;22566:1;22570;22521:8;:51::i;3382:211::-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1961:7:0;3495:44;;;3487:53;;;;;;3551:15;:34;3382:211::o;3731:133:43:-;3823:8;;:33;;;;;;;;;;;;;;3796:7;;-1:-1:-1;;;;;3823:8:43;;:18;;:33;;;;;;;;;;;;;;3796:7;3823:8;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;3823:33:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3823:33:43;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3823:33:43;;3731:133;-1:-1:-1;;3731:133:43:o;1070:234:45:-;1130:7;;1183;;1179:34;;;1212:1;1205:8;;;;1179:34;-1:-1:-1;1238:7:45;;;1243:2;1238;:7;1264:6;;;;;;;;:12;1256:21;;;;;;1295:1;1288:8;;1070:234;;;;;;:::o;1540:154::-;1600:7;;1628:6;;;1620:15;;;;;;1663:2;1658;:7;;;;;;;;;1540:154;-1:-1:-1;;;;1540:154:45:o;10871:888:0:-;10983:7;10992;11012:21;;:::i;:::-;10796:47;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11064:79:0;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;11064:79:0;;;;;;25:18:-1;;;61:17;;11064:79:0;182:15:-1;11064:79:0;10796:64;;;;;10781:81;;;11064:79;;;;179:29:-1;;;;160:49;;11430:11:0;;11064:79;;10796:47;11531:3;;11273:5;11224:3;11195:431;11650:7;11643:15;11640:2;;;11688:1;11685;11678:12;11640:2;-1:-1:-1;;11736:6:0;;;11744;;;;11736;;11744;;-1:-1:-1;10871:888:0;-1:-1:-1;;;;;10871:888:0:o;19245:935::-;19842:19;20084;19864:6;-1:-1:-1;;;;;19864:16:0;;19881:3;19864:21;;;;;;;;;;;;;-1:-1:-1;;;;;19864:21:0;-1:-1:-1;;;;;19864:21:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19864:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19864:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19864:21:0;;-1:-1:-1;;;;;;19900:22:0;;19917:4;19900:22;19896:177;;;19955:6;-1:-1:-1;;;;;19937:34:0;;19972:3;19977:7;19937:48;;;;;;;;;;;;;-1:-1:-1;;;;;19937:48:0;-1:-1:-1;;;;;19937:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19937:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19937:48:0;;;;19896:177;;;20014:59;;;;;;-1:-1:-1;;;;;20014:59:0;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;:59;;;;;-1:-1:-1;;20014:59:0;;;;;;;;-1:-1:-1;20014:38:0;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;20014:59:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20014:59:0;;;;19896:177;20106:6;-1:-1:-1;;;;;20106:16:0;;20123:3;20106:21;;;;;;;;;;;;;-1:-1:-1;;;;;20106:21:0;-1:-1:-1;;;;;20106:21:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20106:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20106:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20106:21:0;;-1:-1:-1;20146:25:0;;;20138:34;;;;;;19245:935;;;;;;:::o;21022:670::-;21107:4;21124:26;21216:9;21272:26;21462:20;21171:28;21181:17;21171:9;:28::i;:::-;21124:76;;21228:1;21216:13;;21211:452;21235:5;:12;21231:1;:16;21211:452;;;21330:5;21336:1;21330:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21318:27:0;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21318:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21318:29:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21318:29:0;21367:74;;;;;;-1:-1:-1;;;;;21367:74:0;;;;;;;325:6:2;21367:74:0;;;;;;21318:29;;-1:-1:-1;21367:20:0;;;;;;:74;;;;;21318:29;;21367:74;;;;;;;;-1:-1:-1;21367:20:0;:74;;;5:2:-1;;;;30:1;27;20:12;5:2;21367:74:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21367:74:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21367:74:0;21363:289;;;21485:9;-1:-1:-1;;;;;21485:29:0;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21485:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21485:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21485:31:0;;-1:-1:-1;;;;;;21539:23:0;;;;;;:62;;;21567:9;-1:-1:-1;;;;;21567:23:0;;21591:9;21567:34;;;;;;;;;;;;;-1:-1:-1;;;;;21567:34:0;-1:-1:-1;;;;;21567:34:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21567:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21567:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21567:34:0;21566:35;21539:62;21535:101;;;21631:5;21624:12;;;;21535:101;21254:1;21249:6;;;;21211:452;;;21680:4;21673:11;;21022:670;;;;;;;;;:::o;21700:582::-;21959:1;21947:9;:13;21943:332;;;21996:9;21985:7;:20;:43;;;;-1:-1:-1;;;;;;22009:19:0;;;;;;:11;:19;;;;;;;;21985:43;21977:52;;;;;;;;22056:6;-1:-1:-1;;;;;22044:27:0;;22078:9;22044:46;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22044:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22044:46:0;;;;;21943:332;;;22187:6;22183:92;;;22210:53;22229:6;22237:10;22249:4;22255:7;22210:18;:53::i;:::-;21700:582;;;:::o;8840:1882::-;9146:12;;9040:7;;;;9108;;9146:16;;9040:7;;;;-1:-1:-1;;;;;9206:31:0;;;9202:277;;;9262:18;;9254:27;;;;;;9315:1;9296:21;;9202:277;;;9371:13;9367:1;:17;:53;;;;;9405:15;;9388:13;:32;;9367:53;9359:62;;;;;;;;9447:20;9457:9;9447;:20::i;:::-;9436:31;;9202:277;9553:1;9541:13;;9536:1151;9556:14;;;9536:1151;;9653:5;9663:1;9659;:5;9653:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9641:31:0;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9641:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9641:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9641:33:0;9861:12;;9641:33;;-1:-1:-1;9861:5:0;;9867;;;;9861:12;;;;;;;;;;;;;;-1:-1:-1;;;;;9845:28:0;:5;9855:1;9851;:5;9845:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9845:28:0;;9841:103;;9892:52;9908:5;9918:1;9914;:5;9908:12;;;;;;;;;;;;;;;;;;9922:9;9933:10;9892:15;:52::i;:::-;10070:9;-1:-1:-1;;;;;10070:16:0;;10087:5;10097:1;10093;:5;10087:12;;;;;;;;;;;;;;;;;;10101:5;10107:1;10101:8;;;;;;;;;;;;;;;;;;10111:10;10128:9;10123:1;:14;:31;;10153:1;10123:31;;;10140:10;10123:31;10070:85;;;;;;;;;;;;;-1:-1:-1;;;;;10070:85:0;-1:-1:-1;;;;;10070:85:0;;;;;;-1:-1:-1;;;;;10070:85:0;-1:-1:-1;;;;;10070:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10070:85:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10070:85:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10070:85:0;10228:8;;10070:85;;-1:-1:-1;;;;;;10220:29:0;;;10228:5;;10234:1;;10228:8;;;;;;;;;;;;;;-1:-1:-1;;;;;10220:29:0;;10216:320;;;10296:57;1961:7;10296:27;:8;10309:13;10296:27;:12;:27;:::i;:57::-;10270:83;;10380:5;10386:1;10380:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10380:17:0;;10398;10417:15;10380:53;;;;;;;;;;;;;-1:-1:-1;;;;;10380:53:0;-1:-1:-1;;;;;10380:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10380:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10380:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10380:53:0;10372:62;;;;;;;;10465:15;10453:27;;;;10518:1;10499:21;;10216:320;10596:5;10602:1;10596:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10557:82:0;10582:5;10592:1;10588;:5;10582:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10557:82:0;10568:5;10578:1;10574;:5;10568:12;;;;;;;;;;;;;;;;;;;;10557:82;;;;;;;;;;;;10628:10;10557:82;;;;;-1:-1:-1;;;;;10557:82:0;;;;;;;;;;;;;;10667:8;10654:21;;9577:1;9572:6;;;;9536:1151;;;-1:-1:-1;10706:8:0;;8840:1882;-1:-1:-1;;;;;;;;;;;8840:1882:0:o;20647:367::-;20765:32;;;;;;20782:4;20765:32;;;;-1:-1:-1;;;;;20765:32:0;;;;;;;;;20745:17;;20765:16;;;;;:32;;;;;;;;;;;;;;20745:17;20765:16;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;20765:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20765:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20765:32:0;;-1:-1:-1;20812:18:0;;;20808:199;;;20863:1;20851:9;:13;20847:82;;;20883:46;;;;;;-1:-1:-1;;;;;20883:46:0;;;;;;;20927:1;20883:46;;;;;;;;:33;;;;;;:46;;;;;;;;;;;20927:1;20883:33;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;20883:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20883:46:0;;;;20847:82;20962:6;-1:-1:-1;;;;;20944:33:0;;20978:8;20988:6;20944:51;;;;;;;;;;;;;-1:-1:-1;;;;;20944:51:0;-1:-1:-1;;;;;20944:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20944:51:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20944:51:0;;;;20808:199;20647:367;;;;:::o;815:741:25:-;;;;;;;;;;;;;;;105:10:-1;815:741:25;88:34:-1;-1:-1;815:741:25;;;-1:-1:-1;;815:741:25:o",
  "source": "pragma solidity 0.4.26;\nimport '../BancorNetwork.sol';\n\ncontract OldBancorConverter {\n    uint256 private amount;\n\n    constructor(uint256 _amount) public {\n        amount = _amount;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount);\n    }\n}\n\ncontract NewBancorConverter {\n    uint256 private amount;\n    uint256 private fee;\n\n    constructor(uint256 _amount, uint256 _fee) public {\n        amount = _amount;\n        fee = _fee;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256, uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount, fee);\n    }\n}\n\ncontract TestBancorNetwork is BancorNetwork {\n    OldBancorConverter private oldBancorConverter;\n    NewBancorConverter private newBancorConverter;\n\n    constructor(uint256 _amount, uint256 _fee) public BancorNetwork(IContractRegistry(address(1))) {\n        oldBancorConverter = new OldBancorConverter(_amount);\n        newBancorConverter = new NewBancorConverter(_amount, _fee);\n    }\n\n    function getReturnOld() external view returns (uint256, uint256) {\n        return getReturn(address(oldBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n\n    function getReturnNew() external view returns (uint256, uint256) {\n        return getReturn(address(newBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n}\n",
  "sourcePath": "/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/helpers/TestBancorNetwork.sol",
  "ast": {
    "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [
        11607
      ],
      "OldBancorConverter": [
        11562
      ],
      "TestBancorNetwork": [
        11690
      ]
    },
    "id": 11691,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11527,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 11528,
        "nodeType": "ImportDirective",
        "scope": 11691,
        "sourceUnit": 1545,
        "src": "24:30:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11562,
        "linearizedBaseContracts": [
          11562
        ],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11530,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 11562,
            "src": "90:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11539,
              "nodeType": "Block",
              "src": "155:33:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11535,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11530,
                      "src": "165:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11536,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11532,
                      "src": "174:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "165:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11538,
                  "nodeType": "ExpressionStatement",
                  "src": "165:16:25"
                }
              ]
            },
            "documentation": null,
            "id": 11540,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11532,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11540,
                  "src": "131:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:17:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:25"
            },
            "scope": 11562,
            "src": "119:69:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11560,
              "nodeType": "Block",
              "src": "308:87:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11551,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11542,
                    "src": "318:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11552,
                  "nodeType": "ExpressionStatement",
                  "src": "318:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11553,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11544,
                    "src": "338:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11554,
                  "nodeType": "ExpressionStatement",
                  "src": "338:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11555,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11546,
                    "src": "356:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11556,
                  "nodeType": "ExpressionStatement",
                  "src": "356:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 11557,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11530,
                        "src": "381:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11558,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "380:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11550,
                  "id": 11559,
                  "nodeType": "Return",
                  "src": "373:15:25"
                }
              ]
            },
            "documentation": null,
            "id": 11561,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11542,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "213:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11541,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "213:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11544,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "237:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11543,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "237:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11546,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "259:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11549,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "299:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "298:9:25"
            },
            "scope": 11562,
            "src": "194:201:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "56:341:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11607,
        "linearizedBaseContracts": [
          11607
        ],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11564,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 11607,
            "src": "433:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11563,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11566,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 11607,
            "src": "461:19:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11581,
              "nodeType": "Block",
              "src": "537:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11573,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11564,
                      "src": "547:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11574,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11568,
                      "src": "556:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "547:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11576,
                  "nodeType": "ExpressionStatement",
                  "src": "547:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11577,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11566,
                      "src": "573:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11578,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11570,
                      "src": "579:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "573:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11580,
                  "nodeType": "ExpressionStatement",
                  "src": "573:10:25"
                }
              ]
            },
            "documentation": null,
            "id": 11582,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11568,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11582,
                  "src": "499:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11570,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 11582,
                  "src": "516:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:25"
            },
            "scope": 11607,
            "src": "487:103:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11605,
              "nodeType": "Block",
              "src": "719:92:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11595,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11584,
                    "src": "729:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11596,
                  "nodeType": "ExpressionStatement",
                  "src": "729:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11597,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11586,
                    "src": "749:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11598,
                  "nodeType": "ExpressionStatement",
                  "src": "749:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11599,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11588,
                    "src": "767:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11600,
                  "nodeType": "ExpressionStatement",
                  "src": "767:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 11601,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11564,
                        "src": "792:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11602,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11566,
                        "src": "800:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11603,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "791:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11594,
                  "id": 11604,
                  "nodeType": "Return",
                  "src": "784:20:25"
                }
              ]
            },
            "documentation": null,
            "id": 11606,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11584,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "615:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11583,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "615:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11586,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "639:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11585,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "639:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11588,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "661:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11591,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "701:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11593,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "710:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "700:18:25"
            },
            "scope": 11607,
            "src": "596:215:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "399:414:25"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11608,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1544,
              "src": "845:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$1544",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 11609,
            "nodeType": "InheritanceSpecifier",
            "src": "845:13:25"
          }
        ],
        "contractDependencies": [
          1544,
          2072,
          2287,
          11562,
          11607,
          13648,
          13728,
          13878,
          13925,
          14122,
          14138
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11690,
        "linearizedBaseContracts": [
          11690,
          1544,
          2072,
          13648,
          13878,
          13925,
          13728,
          14138,
          14122,
          2287
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11611,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 11690,
            "src": "865:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 11610,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11562,
              "src": "865:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11613,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 11690,
            "src": "916:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 11612,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11607,
              "src": "916:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11642,
              "nodeType": "Block",
              "src": "1063:137:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11627,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11611,
                      "src": "1073:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11630,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11615,
                          "src": "1117:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 11629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1094:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$11562_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 11628,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 11562,
                          "src": "1098:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 11631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1094:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1073:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 11633,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:52:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11634,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11613,
                      "src": "1135:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11637,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11615,
                          "src": "1179:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 11638,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11617,
                          "src": "1188:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1156:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$11607_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 11635,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 11607,
                          "src": "1160:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 11639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1156:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1135:58:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 11641,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:58:25"
                }
              ]
            },
            "documentation": null,
            "id": 11643,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 11622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1058:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 11621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1050:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1050:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11620,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14103,
                      "src": "1032:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$14103_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$14103",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 11625,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11619,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1544,
                  "src": "1018:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$1544_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1018:44:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11615,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11643,
                  "src": "980:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11617,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 11643,
                  "src": "997:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:25"
            },
            "scope": 11690,
            "src": "968:232:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11665,
              "nodeType": "Block",
              "src": "1271:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11652,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11611,
                            "src": "1306:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 11651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1298:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1298:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1339:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11654,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1327:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1355:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11657,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1343:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1343:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1359:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 11662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1359:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11650,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1288:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 11663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1288:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11649,
                  "id": 11664,
                  "nodeType": "Return",
                  "src": "1281:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 11666,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11666,
                  "src": "1253:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11648,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11666,
                  "src": "1262:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:18:25"
            },
            "scope": 11690,
            "src": "1206:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11688,
              "nodeType": "Block",
              "src": "1448:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11675,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11613,
                            "src": "1483:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 11674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1475:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1475:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1516:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11677,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1504:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1504:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1532:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11680,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1520:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1544:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1536:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 11685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1536:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11673,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1465:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 11686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1465:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11672,
                  "id": 11687,
                  "nodeType": "Return",
                  "src": "1458:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 11689,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11689,
                  "src": "1430:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11689,
                  "src": "1439:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:18:25"
            },
            "scope": 11690,
            "src": "1383:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "815:741:25"
      }
    ],
    "src": "0:1557:25"
  },
  "legacyAST": {
    "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [
        11607
      ],
      "OldBancorConverter": [
        11562
      ],
      "TestBancorNetwork": [
        11690
      ]
    },
    "id": 11691,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11527,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/bancorContracts/solidity/contracts/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 11528,
        "nodeType": "ImportDirective",
        "scope": 11691,
        "sourceUnit": 1545,
        "src": "24:30:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11562,
        "linearizedBaseContracts": [
          11562
        ],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11530,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 11562,
            "src": "90:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11539,
              "nodeType": "Block",
              "src": "155:33:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11535,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11530,
                      "src": "165:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11536,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11532,
                      "src": "174:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "165:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11538,
                  "nodeType": "ExpressionStatement",
                  "src": "165:16:25"
                }
              ]
            },
            "documentation": null,
            "id": 11540,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11532,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11540,
                  "src": "131:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "131:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:17:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:25"
            },
            "scope": 11562,
            "src": "119:69:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11560,
              "nodeType": "Block",
              "src": "308:87:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11551,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11542,
                    "src": "318:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11552,
                  "nodeType": "ExpressionStatement",
                  "src": "318:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11553,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11544,
                    "src": "338:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11554,
                  "nodeType": "ExpressionStatement",
                  "src": "338:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11555,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11546,
                    "src": "356:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11556,
                  "nodeType": "ExpressionStatement",
                  "src": "356:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 11557,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11530,
                        "src": "381:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11558,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "380:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11550,
                  "id": 11559,
                  "nodeType": "Return",
                  "src": "373:15:25"
                }
              ]
            },
            "documentation": null,
            "id": 11561,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11542,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "213:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11541,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "213:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11544,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "237:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11543,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "237:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11546,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "259:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11549,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11561,
                  "src": "299:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "298:9:25"
            },
            "scope": 11562,
            "src": "194:201:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "56:341:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11607,
        "linearizedBaseContracts": [
          11607
        ],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11564,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 11607,
            "src": "433:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11563,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11566,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 11607,
            "src": "461:19:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11581,
              "nodeType": "Block",
              "src": "537:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11573,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11564,
                      "src": "547:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11574,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11568,
                      "src": "556:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "547:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11576,
                  "nodeType": "ExpressionStatement",
                  "src": "547:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11577,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11566,
                      "src": "573:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11578,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11570,
                      "src": "579:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "573:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11580,
                  "nodeType": "ExpressionStatement",
                  "src": "573:10:25"
                }
              ]
            },
            "documentation": null,
            "id": 11582,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11568,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11582,
                  "src": "499:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11570,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 11582,
                  "src": "516:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:25"
            },
            "scope": 11607,
            "src": "487:103:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11605,
              "nodeType": "Block",
              "src": "719:92:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11595,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11584,
                    "src": "729:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11596,
                  "nodeType": "ExpressionStatement",
                  "src": "729:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11597,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11586,
                    "src": "749:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 11598,
                  "nodeType": "ExpressionStatement",
                  "src": "749:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11599,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11588,
                    "src": "767:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11600,
                  "nodeType": "ExpressionStatement",
                  "src": "767:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 11601,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11564,
                        "src": "792:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11602,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11566,
                        "src": "800:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 11603,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "791:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11594,
                  "id": 11604,
                  "nodeType": "Return",
                  "src": "784:20:25"
                }
              ]
            },
            "documentation": null,
            "id": 11606,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11584,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "615:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11583,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "615:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11586,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "639:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$12937",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11585,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12937,
                    "src": "639:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$12937",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11588,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "661:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11591,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "701:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11593,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11606,
                  "src": "710:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "700:18:25"
            },
            "scope": 11607,
            "src": "596:215:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "399:414:25"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11608,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1544,
              "src": "845:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$1544",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 11609,
            "nodeType": "InheritanceSpecifier",
            "src": "845:13:25"
          }
        ],
        "contractDependencies": [
          1544,
          2072,
          2287,
          11562,
          11607,
          13648,
          13728,
          13878,
          13925,
          14122,
          14138
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11690,
        "linearizedBaseContracts": [
          11690,
          1544,
          2072,
          13648,
          13878,
          13925,
          13728,
          14138,
          14122,
          2287
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11611,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 11690,
            "src": "865:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 11610,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11562,
              "src": "865:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11613,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 11690,
            "src": "916:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 11612,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11607,
              "src": "916:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11642,
              "nodeType": "Block",
              "src": "1063:137:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11627,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11611,
                      "src": "1073:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11630,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11615,
                          "src": "1117:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 11629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1094:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$11562_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 11628,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 11562,
                          "src": "1098:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 11631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1094:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1073:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 11633,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:52:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11634,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11613,
                      "src": "1135:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11637,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11615,
                          "src": "1179:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 11638,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11617,
                          "src": "1188:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1156:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$11607_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 11635,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 11607,
                          "src": "1160:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 11639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1156:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1135:58:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 11641,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:58:25"
                }
              ]
            },
            "documentation": null,
            "id": 11643,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 11622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1058:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 11621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1050:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1050:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11620,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14103,
                      "src": "1032:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$14103_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$14103",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 11625,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11619,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1544,
                  "src": "1018:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$1544_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1018:44:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11615,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11643,
                  "src": "980:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11617,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 11643,
                  "src": "997:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:25"
            },
            "scope": 11690,
            "src": "968:232:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11665,
              "nodeType": "Block",
              "src": "1271:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11652,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11611,
                            "src": "1306:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$11562",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 11651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1298:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1298:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1339:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11654,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1327:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1355:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11657,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1343:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1343:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1359:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 11662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1359:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11650,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1288:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 11663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1288:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11649,
                  "id": 11664,
                  "nodeType": "Return",
                  "src": "1281:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 11666,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11666,
                  "src": "1253:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11648,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11666,
                  "src": "1262:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:18:25"
            },
            "scope": 11690,
            "src": "1206:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11688,
              "nodeType": "Block",
              "src": "1448:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11675,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11613,
                            "src": "1483:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$11607",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 11674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1475:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1475:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1516:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11677,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1504:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1504:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1532:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11680,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12937,
                          "src": "1520:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$12937_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 11682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 11684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1544:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1536:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 11685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1536:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$12937",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11673,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1465:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 11686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1465:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 11672,
                  "id": 11687,
                  "nodeType": "Return",
                  "src": "1458:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 11689,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 11672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11689,
                  "src": "1430:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11689,
                  "src": "1439:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:18:25"
            },
            "scope": 11690,
            "src": "1383:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11691,
        "src": "815:741:25"
      }
    ],
    "src": "0:1557:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-04-03T06:39:09.883Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer\r"
      },
      "claimAndConvert(address[],uint256,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "claimAndConvert2(address[],uint256,uint256,address,uint256)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network\r by following a predefined conversion path and transfers the result tokens back to the sender\r note that allowance must be set beforehand\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "claimAndConvertFor(address[],uint256,uint256,address)": {
        "details": "deprecated, backward compatibility\r"
      },
      "claimAndConvertFor2(address[],uint256,uint256,address,address,uint256)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network\r by following a predefined conversion path and transfers the result tokens to a target account\r note that allowance must be set beforehand\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_for": "account that will receive the conversion result\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convert(address[],uint256,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convert2(address[],uint256,uint256,address,uint256)": {
        "details": "converts the token to any other token in the bancor network by following\r a predefined conversion path and transfers the result tokens back to the sender\r note that the network should already own the source tokens\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convertFor(address[],uint256,uint256,address)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertFor2(address[],uint256,uint256,address,address,uint256)": {
        "details": "converts the token to any other token in the bancor network by following\r a predefined conversion path and transfers the result tokens to a target account\r note that the network should already own the source tokens\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_for": "account that will receive the conversion result\r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r"
        },
        "return": "tokens issued in return\r"
      },
      "convertForPrioritized(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized2(address[],uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "convertForPrioritized4(address[],uint256,uint256,address,uint256[],address,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "getReturnByPath(address[],uint256)": {
        "details": "calculates the expected return of converting a given amount on a given path\r note that there is no support for circular paths\r \r",
        "params": {
          "_amount": "amount of _path[0] tokens received from the user\r \r",
          "_path": "conversion path (see conversion path format above)\r"
        },
        "return": "amount of _path[_path.length - 1] tokens that the user will receive\ramount of _path[_path.length - 1] tokens that the user will pay as fee\r"
      },
      "registerEtherToken(address,bool)": {
        "details": "allows the owner to register/unregister ether tokens\r \r",
        "params": {
          "_register": "true to register, false to unregister\r",
          "_token": "ether token contract address\r"
        }
      },
      "restoreRegistry()": {
        "details": "restores the previous contract-registry\r"
      },
      "restrictRegistryUpdate(bool)": {
        "details": "restricts the permission to update the contract-registry\r \r",
        "params": {
          "_onlyOwnerCanUpdateRegistry": "indicates whether or not permission is restricted to owner only\r"
        }
      },
      "setMaxAffiliateFee(uint256)": {
        "details": "allows the owner to update the maximum affiliate-fee\r \r",
        "params": {
          "_maxAffiliateFee": "maximum affiliate-fee\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new contract owner\r"
        }
      },
      "updateRegistry()": {
        "details": "updates to the new contract-registry\r"
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      },
      "xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)": {
        "details": "deprecated, backward compatibility\r"
      },
      "xConvert2(address[],uint256,uint256,bytes32,bytes32,uint256,address,uint256)": {
        "details": "converts any other token to BNT in the bancor network\r by following a predefined conversion path and transfers the resulting\r tokens to BancorX.\r note that the network should already have been given allowance of the source token (if not ETH)\r \r",
        "params": {
          "_affiliateAccount": "affiliate account\r",
          "_affiliateFee": "affiliate fee in PPM\r \r",
          "_amount": "amount to convert from (in the initial source token)\r",
          "_conversionId": "pre-determined unique (if non zero) id which refers to this transaction \r",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\r",
          "_path": "conversion path, see conversion path format above\r",
          "_to": "address/account on _toBlockchain to send the BNT to\r",
          "_toBlockchain": "blockchain BNT will be issued on\r"
        },
        "return": "the amount of BNT received from this conversion\r"
      },
      "xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "deprecated, backward compatibility\r"
      },
      "xConvertPrioritized2(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[])": {
        "details": "deprecated, backward compatibility\r"
      },
      "xConvertPrioritized3(address[],uint256,uint256,bytes32,bytes32,uint256,uint256[],address,uint256)": {
        "details": "deprecated, backward compatibility\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}