{
  "contractName": "SmartTokenController",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "bancorX",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bancorX",
          "type": "address"
        }
      ],
      "name": "setBancorX",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"bancorX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bancorX\",\"type\":\"address\"}],\"name\":\"setBancorX\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"acceptTokenOwnership()\":{\"details\":\"used by a new owner to accept a token ownership transfer\\r can only be called by the contract owner\\r\"},\"claimTokens(address,uint256)\":{\"details\":\"allows the associated BancorX contract to claim tokens from any address (so that users\\r dont have to first give allowance when calling BancorX)\\r \\r\",\"params\":{\"_amount\":\"the amount of tokens to claim\\r\",\"_from\":\"address to claim the tokens from\\r\"}},\"setBancorX(address)\":{\"details\":\"allows the owner to set the associated BancorX contract\\r\",\"params\":{\"_bancorX\":\"BancorX contract\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}},\"transferTokenOwnership(address)\":{\"details\":\"allows transferring the token ownership\\r the new owner needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new token owner\\r\"}},\"withdrawFromToken(address,address,uint256)\":{\"details\":\"withdraws tokens held by the controller and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/SmartTokenController.sol\":\"SmartTokenController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/SmartTokenController.sol\":{\"keccak256\":\"0xdfbb644f0c6d595c4250d1b3dc285b84eb55f83671e9cca27060aa9c1c3815a0\",\"urls\":[\"bzzr://a210e451eed7b78bf2e74bf31f8be2a2127b77c6e5af0241aa6790067e305c80\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xc1dbe021e4c5a19475048b9894ef9f1e25b922258724185ad051e54ad11c37cd\",\"urls\":[\"bzzr://f2c3cf6469aa2fdaff4b4c620f5404811d7a7c2db2231ca15e41b1b7b58526f9\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0xcd642e7946e6781417be0f80ce5c15249cc6a822ac1f393eba746edb57b2a51c\",\"urls\":[\"bzzr://729a3ef24b26d3425eca5a3b6dca9d902e4695ec03f1970937f9cec194d97b80\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0x625bca84d2d9d821993ab70286b8862a5dd5e314a15939012de4907ce2994b39\",\"urls\":[\"bzzr://6add47367a0d036ca02ea19688b73472ba2d0a762d1cbbb4ca8558ba98c702d6\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartTokenController.sol\":{\"keccak256\":\"0xdb60fe6c7948bac7167404ce6076cdbe161c8b9b2920b55bfc07372a2371ca53\",\"urls\":[\"bzzr://60732d5e3d7edb31f854950679c457a013cb26db75de84ff4fbbd24cdaa5b56b\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/Owned.sol\":{\"keccak256\":\"0xce659c948fd6e652d14c1e98790fcbaac7e2b2cfb25f7fe40a723055f7403396\",\"urls\":[\"bzzr://c281f9a24b13a168b9e720444280dc9f125646e388d5a3e579a7850376f26c25\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0x88e04f516c4dd0d83973edfd7301785656217768b07453ab50586fc4df0441a9\",\"urls\":[\"bzzr://39d021980ecf43e4fc24a97af237a0c711d37c19eccef93b07ef4342ccd7ccfa\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/Utils.sol\":{\"keccak256\":\"0x6de760a463f6105446988b7bdcacc3dc525fdef4359a15a25cc0822e317c6b9a\",\"urls\":[\"bzzr://cbe079a4723e79f1b662a309c48ed9b32f4ce969b3dce2d080a151aef495c001\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x738d19fc1c5a71283c0bc400278e775b21c0cbf62c03852abde81ded30c9ba0f\",\"urls\":[\"bzzr://9064b8a0c73cdb04eb3c84519f8c53382881977c0b2de18532d9fa59148934de\"]},\"/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0xe652e6fb418265340bb9704e5ad9c33173de6ed6efc95114112915a8675ae9a3\",\"urls\":[\"bzzr://d537e87dd6bc47263da27a6a4e97fcebfc31bb5aa2e3a3d5082e3ef787a0e591\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610a15833981016040525160008054600160a060020a0319163317905580600160a060020a038116151561004a57600080fd5b5060028054600160a060020a031916600160a060020a039290921691909117905561099b8061007a6000396000f3006080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631120a77681146100be57806321e6b53d146100fc57806338a5e0161461012c57806341a5b33d146101415780635e35359e1461017857806379ba5097146101af5780638da5cb5b146101c4578063d4ee1d90146101d9578063d924f0c3146101ee578063f2fde38b1461021c578063fc0c546a1461024a578063fe417fa51461025f575b600080fd5b3480156100ca57600080fd5b506100d3610290565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561010857600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff600435166102ac565b005b34801561013857600080fd5b5061012a61035f565b34801561014d57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610423565b34801561018457600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356104e7565b3480156101bb57600080fd5b5061012a610638565b3480156101d057600080fd5b506100d36106e7565b3480156101e557600080fd5b506100d3610703565b3480156101fa57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff6004351661071f565b34801561022857600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff6004351661077f565b34801561025657600080fd5b506100d3610807565b34801561026b57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff60043516602435610823565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d057600080fd5b600254604080517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529151919092169163f2fde38b91602480830192600092919082900301818387803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461038357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461044757600080fd5b600254604080517f5e35359e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301526044820185905291519190921691635e35359e91606480830192600092919082900301818387803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461050b57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff8116151561052e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff8116151561055157600080fd5b8373ffffffffffffffffffffffffffffffffffffffff811630141561057557600080fd5b8573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b50505050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461065c57600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff1990811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461074357600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107a357600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff828116911614156107cb57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60035473ffffffffffffffffffffffffffffffffffffffff16331461084757600080fd5b600254604080517fa24835d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590529151919092169163a24835d191604480830192600092919082900301818387803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050600254604080517f867904b400000000000000000000000000000000000000000000000000000000815233600482015260248101869052905173ffffffffffffffffffffffffffffffffffffffff909216935063867904b4925060448082019260009290919082900301818387803b15801561095357600080fd5b505af1158015610967573d6000803e3d6000fd5b5050505050505600a165627a7a7230582009fdb4f96898c88c95861ef54cd469f888c2ffd767df5bf3b0d524e82b2ca5c70029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631120a77681146100be57806321e6b53d146100fc57806338a5e0161461012c57806341a5b33d146101415780635e35359e1461017857806379ba5097146101af5780638da5cb5b146101c4578063d4ee1d90146101d9578063d924f0c3146101ee578063f2fde38b1461021c578063fc0c546a1461024a578063fe417fa51461025f575b600080fd5b3480156100ca57600080fd5b506100d3610290565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561010857600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff600435166102ac565b005b34801561013857600080fd5b5061012a61035f565b34801561014d57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610423565b34801561018457600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356104e7565b3480156101bb57600080fd5b5061012a610638565b3480156101d057600080fd5b506100d36106e7565b3480156101e557600080fd5b506100d3610703565b3480156101fa57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff6004351661071f565b34801561022857600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff6004351661077f565b34801561025657600080fd5b506100d3610807565b34801561026b57600080fd5b5061012a73ffffffffffffffffffffffffffffffffffffffff60043516602435610823565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d057600080fd5b600254604080517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529151919092169163f2fde38b91602480830192600092919082900301818387803b15801561034457600080fd5b505af1158015610358573d6000803e3d6000fd5b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461038357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461044757600080fd5b600254604080517f5e35359e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301526044820185905291519190921691635e35359e91606480830192600092919082900301818387803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461050b57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff8116151561052e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff8116151561055157600080fd5b8373ffffffffffffffffffffffffffffffffffffffff811630141561057557600080fd5b8573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b50505050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461065c57600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff1990811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461074357600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107a357600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff828116911614156107cb57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60035473ffffffffffffffffffffffffffffffffffffffff16331461084757600080fd5b600254604080517fa24835d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590529151919092169163a24835d191604480830192600092919082900301818387803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050600254604080517f867904b400000000000000000000000000000000000000000000000000000000815233600482015260248101869052905173ffffffffffffffffffffffffffffffffffffffff909216935063867904b4925060448082019260009290919082900301818387803b15801561095357600080fd5b505af1158015610967573d6000803e3d6000fd5b5050505050505600a165627a7a7230582009fdb4f96898c88c95861ef54cd469f888c2ffd767df5bf3b0d524e82b2ca5c70029",
  "sourceMap": "1032:2758:61:-;;;1376:116;8:9:-1;5:2;;;30:1;27;20:12;5:2;1376:116:61;;;;;;;;;;;;;559:5:70;:18;;-1:-1:-1;;;;;;559:18:70;567:10;559:18;;;1376:116:61;-1:-1:-1;;;;;457:22:73;;;;449:31;;;;;;-1:-1:-1;1470:5:61;:14;;-1:-1:-1;;;;;;1470:14:61;-1:-1:-1;;;;;1470:14:61;;;;;;;;;;1032:2758;;;-1:-1:-1;1032:2758:61;;",
  "deployedSourceMap": "1032:2758:61:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1164:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1164:22:61;;;;;;;;;;;;;;;;;;;;;;;2040:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2040:121:61;;;;;;;;;2307:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2307:91:61;;;;2714:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2714:169:61;;;;;;;;;;;;;;1263:260:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1263:260:72;;;;;;;;;;;;;;1193:187:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:187:70;;;;167:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:20:70;;;;194:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:23:70;;;;3695:92:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3695:92:61;;;;;;;962:140:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;962:140:70;;;;;;;1107:24:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:24:61;;;;3202:352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3202:352:61;;;;;;;;;1164:22;;;;;;:::o;2040:121::-;688:5:70;;;;674:10;:19;666:28;;;;;;2119:5:61;;:34;;;;;;:5;:34;;;;;;;;;:5;;;;;:23;;:34;;;;;:5;;:34;;;;;;;:5;;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2119:34:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2119:34:61;;;;2040:121;:::o;2307:91::-;688:5:70;;;;674:10;:19;666:28;;;;;;2367:5:61;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2367:23:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2367:23:61;;;;2307:91::o;2714:169::-;688:5:70;;;;674:10;:19;666:28;;;;;;2832:5:61;;2819:56;;;;;;2832:5;2819:56;;;;;;;;;;;;;;;;;;;;;;2832:5;;;;;2819:34;;:56;;;;;2832:5;;2819:56;;;;;;;2832:5;;2819:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2819:56:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2819:56:61;;;;2714:169;;;:::o;1263:260:72:-;688:5:70;;;;674:10;:19;666:28;;;;;;1394:6:72;457:22:73;;;;;449:31;;;;;;1424:3:72;457:22:73;;;;;449:31;;;;;;1446:3:72;636:25:73;;;656:4;636:25;;628:34;;;;;;1485:6:72;1467:34;;;1502:3;1507:7;1467:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1467:48:72;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1467:48:72;;;;491:1:73;;705::70;1263:260:72;;;:::o;1193:187:70:-;1260:8;;;;1246:10;:22;1238:31;;;;;;1304:8;;;1297:5;;1285:28;;1304:8;;;;;1297:5;;;;1285:28;;;1332:8;;;;1324:16;;-1:-1:-1;;1324:16:70;;;1332:8;;;1324:16;;;;1351:21;;;1193:187::o;167:20::-;;;;;;:::o;194:23::-;;;;;;:::o;3695:92:61:-;688:5:70;;;;674:10;:19;666:28;;;;;;3761:7:61;:18;;-1:-1:-1;;3761:18:61;;;;;;;;;;;;3695:92::o;962:140:70:-;688:5;;;;674:10;:19;666:28;;;;;;1057:5;;;1044:18;;;1057:5;;1044:18;;1036:27;;;;;;1074:8;:20;;-1:-1:-1;;1074:20:70;;;;;;;;;;;;962:140::o;1107:24:61:-;;;;;;:::o;3202:352::-;3365:7;;;;3351:10;:21;3343:30;;;;;;3474:5;;:29;;;;;;:5;:29;;;;;;;;;;;;;;;:5;;;;;:13;;:29;;;;;:5;;:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;3474:29:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3514:5:61;;:32;;;;;;3526:10;3514:32;;;;;;;;;;;;:5;;;;;-1:-1:-1;3514:11:61;;-1:-1:-1;3514:32:61;;;;;:5;;:32;;;;;;;;:5;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;3514:32:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3514:32:61;;;;3202:352;;:::o",
  "source": "pragma solidity 0.4.26;\r\nimport './interfaces/ISmartTokenController.sol';\r\nimport './interfaces/ISmartToken.sol';\r\nimport '../utility/TokenHolder.sol';\r\n\r\n/**\r\n  * @dev The smart token controller is an upgradable part of the smart token that allows\r\n  * more functionality as well as fixes for bugs/exploits.\r\n  * Once it accepts ownership of the token, it becomes the token's sole controller\r\n  * that can execute any of its functions.\r\n  * \r\n  * To upgrade the controller, ownership must be transferred to a new controller, along with\r\n  * any relevant data.\r\n  * \r\n  * The smart token must be set on construction and cannot be changed afterwards.\r\n  * Wrappers are provided (as opposed to a single 'execute' function) for each of the token's functions, for easier access.\r\n  * \r\n  * Note that the controller can transfer token ownership to a new controller that\r\n  * doesn't allow executing any function on the token, for a trustless solution.\r\n  * Doing that will also remove the owner's ability to upgrade the controller.\r\n*/\r\ncontract SmartTokenController is ISmartTokenController, TokenHolder {\r\n    ISmartToken public token;   // Smart Token contract\r\n    address public bancorX;     // BancorX contract\r\n\r\n    /**\r\n      * @dev initializes a new SmartTokenController instance\r\n      * \r\n      * @param  _token      smart token governed by the controller\r\n    */\r\n    constructor(ISmartToken _token)\r\n        public\r\n        validAddress(_token)\r\n    {\r\n        token = _token;\r\n    }\r\n\r\n    // ensures that the controller is the token's owner\r\n    modifier active() {\r\n        require(token.owner() == address(this));\r\n        _;\r\n    }\r\n\r\n    // ensures that the controller is not the token's owner\r\n    modifier inactive() {\r\n        require(token.owner() != address(this));\r\n        _;\r\n    }\r\n\r\n    /**\r\n      * @dev allows transferring the token ownership\r\n      * the new owner needs to accept the transfer\r\n      * can only be called by the contract owner\r\n      * \r\n      * @param _newOwner    new token owner\r\n    */\r\n    function transferTokenOwnership(address _newOwner) public ownerOnly {\r\n        token.transferOwnership(_newOwner);\r\n    }\r\n\r\n    /**\r\n      * @dev used by a new owner to accept a token ownership transfer\r\n      * can only be called by the contract owner\r\n    */\r\n    function acceptTokenOwnership() public ownerOnly {\r\n        token.acceptOwnership();\r\n    }\r\n\r\n    /**\r\n      * @dev withdraws tokens held by the controller and sends them to an account\r\n      * can only be called by the owner\r\n      * \r\n      * @param _token   ERC20 token contract address\r\n      * @param _to      account to receive the new amount\r\n      * @param _amount  amount to withdraw\r\n    */\r\n    function withdrawFromToken(IERC20Token _token, address _to, uint256 _amount) public ownerOnly {\r\n        ITokenHolder(token).withdrawTokens(_token, _to, _amount);\r\n    }\r\n\r\n    /**\r\n      * @dev allows the associated BancorX contract to claim tokens from any address (so that users\r\n      * dont have to first give allowance when calling BancorX)\r\n      * \r\n      * @param _from      address to claim the tokens from\r\n      * @param _amount    the amount of tokens to claim\r\n     */\r\n    function claimTokens(address _from, uint256 _amount) public {\r\n        // only the associated BancorX contract may call this method\r\n        require(msg.sender == bancorX);\r\n\r\n        // destroy the tokens belonging to _from, and issue the same amount to bancorX\r\n        token.destroy(_from, _amount);\r\n        token.issue(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n      * @dev allows the owner to set the associated BancorX contract\r\n      * @param _bancorX    BancorX contract\r\n     */\r\n    function setBancorX(address _bancorX) public ownerOnly {\r\n        bancorX = _bancorX;\r\n    }\r\n}\r\n",
  "sourcePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/SmartTokenController.sol",
  "ast": {
    "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/SmartTokenController.sol",
    "exportedSymbols": {
      "SmartTokenController": [
        17943
      ]
    },
    "id": 17944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17802,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:61"
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartTokenController.sol",
        "file": "./interfaces/ISmartTokenController.sol",
        "id": 17803,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18195,
        "src": "25:48:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartToken.sol",
        "file": "./interfaces/ISmartToken.sol",
        "id": 17804,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18176,
        "src": "75:38:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 17805,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18977,
        "src": "115:36:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17806,
              "name": "ISmartTokenController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18194,
              "src": "1065:21:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartTokenController_$18194",
                "typeString": "contract ISmartTokenController"
              }
            },
            "id": 17807,
            "nodeType": "InheritanceSpecifier",
            "src": "1065:21:61"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17808,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18976,
              "src": "1088:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$18976",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 17809,
            "nodeType": "InheritanceSpecifier",
            "src": "1088:11:61"
          }
        ],
        "contractDependencies": [
          18194,
          18826,
          18976,
          19023,
          19220,
          19236
        ],
        "contractKind": "contract",
        "documentation": "@dev The smart token controller is an upgradable part of the smart token that allows\r\nmore functionality as well as fixes for bugs/exploits.\r\nOnce it accepts ownership of the token, it becomes the token's sole controller\r\nthat can execute any of its functions.\r\n\r\nTo upgrade the controller, ownership must be transferred to a new controller, along with\r\nany relevant data.\r\n\r\nThe smart token must be set on construction and cannot be changed afterwards.\r\nWrappers are provided (as opposed to a single 'execute' function) for each of the token's functions, for easier access.\r\n\r\nNote that the controller can transfer token ownership to a new controller that\r\ndoesn't allow executing any function on the token, for a trustless solution.\r\nDoing that will also remove the owner's ability to upgrade the controller.\r",
        "fullyImplemented": true,
        "id": 17943,
        "linearizedBaseContracts": [
          17943,
          18976,
          19023,
          18826,
          19236,
          19220,
          18194
        ],
        "name": "SmartTokenController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17811,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 17943,
            "src": "1107:24:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartToken_$18175",
              "typeString": "contract ISmartToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 17810,
              "name": "ISmartToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18175,
              "src": "1107:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                "typeString": "contract ISmartToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17813,
            "name": "bancorX",
            "nodeType": "VariableDeclaration",
            "scope": 17943,
            "src": "1164:22:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17812,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17825,
              "nodeType": "Block",
              "src": "1459:33:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17821,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17811
                      ],
                      "referencedDeclaration": 17811,
                      "src": "1470:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$18175",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17822,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17815,
                      "src": "1478:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$18175",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "src": "1470:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "id": 17824,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:14:61"
                }
              ]
            },
            "documentation": "@dev initializes a new SmartTokenController instance\r\n\r\n@param  _token      smart token governed by the controller\r",
            "id": 17826,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 17818,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17815,
                    "src": "1446:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  }
                ],
                "id": 17819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17817,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19008,
                  "src": "1433:12:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:20:61"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17815,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17826,
                  "src": "1388:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$18175",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 17814,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18175,
                    "src": "1388:11:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1387:20:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:61"
            },
            "scope": 17943,
            "src": "1376:116:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17839,
              "nodeType": "Block",
              "src": "1575:70:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 17829,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                17811
                              ],
                              "referencedDeclaration": 17811,
                              "src": "1594:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 17830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19211,
                            "src": "1594:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 17831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1594:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17833,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19611,
                              "src": "1619:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 17832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1611:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 17834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1611:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1594:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "1586:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17837,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:39:61"
                },
                {
                  "id": 17838,
                  "nodeType": "PlaceholderStatement",
                  "src": "1636:1:61"
                }
              ]
            },
            "documentation": null,
            "id": 17840,
            "name": "active",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 17827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:2:61"
            },
            "src": "1557:88:61",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17853,
              "nodeType": "Block",
              "src": "1734:70:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 17843,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                17811
                              ],
                              "referencedDeclaration": 17811,
                              "src": "1753:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 17844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19211,
                            "src": "1753:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 17845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1753:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17847,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19611,
                              "src": "1778:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 17846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1770:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 17848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1753:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "1745:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17851,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:39:61"
                },
                {
                  "id": 17852,
                  "nodeType": "PlaceholderStatement",
                  "src": "1795:1:61"
                }
              ]
            },
            "documentation": null,
            "id": 17854,
            "name": "inactive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 17841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:2:61"
            },
            "src": "1714:90:61",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17867,
              "nodeType": "Block",
              "src": "2108:53:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17864,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17856,
                        "src": "2143:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17861,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "2119:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19216,
                      "src": "2119:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 17865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:34:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17866,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:34:61"
                }
              ]
            },
            "documentation": "@dev allows transferring the token ownership\r\nthe new owner needs to accept the transfer\r\ncan only be called by the contract owner\r\n\r\n@param _newOwner    new token owner\r",
            "id": 17868,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17858,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2098:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2098:9:61"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17856,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 17868,
                  "src": "2072:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2071:19:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:0:61"
            },
            "scope": 17943,
            "src": "2040:121:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17878,
              "nodeType": "Block",
              "src": "2356:42:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17873,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "2367:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "acceptOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19219,
                      "src": "2367:21:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 17876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:23:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17877,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:23:61"
                }
              ]
            },
            "documentation": "@dev used by a new owner to accept a token ownership transfer\r\ncan only be called by the contract owner\r",
            "id": 17879,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17871,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17870,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2346:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2346:9:61"
              }
            ],
            "name": "acceptTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:2:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:0:61"
            },
            "scope": 17943,
            "src": "2307:91:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17899,
              "nodeType": "Block",
              "src": "2808:75:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17894,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17881,
                        "src": "2854:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$18035",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17895,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17883,
                        "src": "2862:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17896,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17885,
                        "src": "2867:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$18035",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 17891,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              17811
                            ],
                            "referencedDeclaration": 17811,
                            "src": "2832:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISmartToken_$18175",
                              "typeString": "contract ISmartToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISmartToken_$18175",
                              "typeString": "contract ISmartToken"
                            }
                          ],
                          "id": 17890,
                          "name": "ITokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19236,
                          "src": "2819:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenHolder_$19236_$",
                            "typeString": "type(contract ITokenHolder)"
                          }
                        },
                        "id": 17892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2819:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenHolder_$19236",
                          "typeString": "contract ITokenHolder"
                        }
                      },
                      "id": 17893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19235,
                      "src": "2819:34:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Token_$18035_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Token,address,uint256) external"
                      }
                    },
                    "id": 17897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:56:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17898,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:56:61"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the controller and sends them to an account\r\ncan only be called by the owner\r\n\r\n@param _token   ERC20 token contract address\r\n@param _to      account to receive the new amount\r\n@param _amount  amount to withdraw\r",
            "id": 17900,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17888,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17887,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2798:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2798:9:61"
              }
            ],
            "name": "withdrawFromToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17881,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2741:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$18035",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 17880,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18035,
                    "src": "2741:11:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$18035",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17883,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2761:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17885,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2774:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2740:50:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:0:61"
            },
            "scope": 17943,
            "src": "2714:169:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17929,
              "nodeType": "Block",
              "src": "3262:292:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 17908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19490,
                            "src": "3351:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3351:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17910,
                          "name": "bancorX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17813,
                          "src": "3365:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3351:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "3343:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17913,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:30:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17917,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17902,
                        "src": "3488:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17918,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17904,
                        "src": "3495:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17914,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "3474:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18174,
                      "src": "3474:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:29:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17920,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:29:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 17924,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19490,
                          "src": "3526:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3526:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17926,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17904,
                        "src": "3538:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17921,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "3514:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18167,
                      "src": "3514:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3514:32:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17928,
                  "nodeType": "ExpressionStatement",
                  "src": "3514:32:61"
                }
              ]
            },
            "documentation": "@dev allows the associated BancorX contract to claim tokens from any address (so that users\r\ndont have to first give allowance when calling BancorX)\r\n\r\n@param _from      address to claim the tokens from\r\n@param _amount    the amount of tokens to claim\r",
            "id": 17930,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17902,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 17930,
                  "src": "3223:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17904,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17930,
                  "src": "3238:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3222:32:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3262:0:61"
            },
            "scope": 17943,
            "src": "3202:352:61",
            "stateMutability": "nonpayable",
            "superFunction": 18185,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17941,
              "nodeType": "Block",
              "src": "3750:37:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17937,
                      "name": "bancorX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17813,
                      "src": "3761:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17938,
                      "name": "_bancorX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17932,
                      "src": "3771:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3761:18:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17940,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:18:61"
                }
              ]
            },
            "documentation": "@dev allows the owner to set the associated BancorX contract\r\n@param _bancorX    BancorX contract\r",
            "id": 17942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17935,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17934,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "3740:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:9:61"
              }
            ],
            "name": "setBancorX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17932,
                  "name": "_bancorX",
                  "nodeType": "VariableDeclaration",
                  "scope": 17942,
                  "src": "3715:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3715:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3714:18:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3750:0:61"
            },
            "scope": 17943,
            "src": "3695:92:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 17944,
        "src": "1032:2758:61"
      }
    ],
    "src": "0:3792:61"
  },
  "legacyAST": {
    "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/SmartTokenController.sol",
    "exportedSymbols": {
      "SmartTokenController": [
        17943
      ]
    },
    "id": 17944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17802,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:61"
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartTokenController.sol",
        "file": "./interfaces/ISmartTokenController.sol",
        "id": 17803,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18195,
        "src": "25:48:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/token/interfaces/ISmartToken.sol",
        "file": "./interfaces/ISmartToken.sol",
        "id": 17804,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18176,
        "src": "75:38:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/faycal/Desktop/projects/BancorCompoundPool/contracts/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 17805,
        "nodeType": "ImportDirective",
        "scope": 17944,
        "sourceUnit": 18977,
        "src": "115:36:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17806,
              "name": "ISmartTokenController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18194,
              "src": "1065:21:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartTokenController_$18194",
                "typeString": "contract ISmartTokenController"
              }
            },
            "id": 17807,
            "nodeType": "InheritanceSpecifier",
            "src": "1065:21:61"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17808,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18976,
              "src": "1088:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$18976",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 17809,
            "nodeType": "InheritanceSpecifier",
            "src": "1088:11:61"
          }
        ],
        "contractDependencies": [
          18194,
          18826,
          18976,
          19023,
          19220,
          19236
        ],
        "contractKind": "contract",
        "documentation": "@dev The smart token controller is an upgradable part of the smart token that allows\r\nmore functionality as well as fixes for bugs/exploits.\r\nOnce it accepts ownership of the token, it becomes the token's sole controller\r\nthat can execute any of its functions.\r\n\r\nTo upgrade the controller, ownership must be transferred to a new controller, along with\r\nany relevant data.\r\n\r\nThe smart token must be set on construction and cannot be changed afterwards.\r\nWrappers are provided (as opposed to a single 'execute' function) for each of the token's functions, for easier access.\r\n\r\nNote that the controller can transfer token ownership to a new controller that\r\ndoesn't allow executing any function on the token, for a trustless solution.\r\nDoing that will also remove the owner's ability to upgrade the controller.\r",
        "fullyImplemented": true,
        "id": 17943,
        "linearizedBaseContracts": [
          17943,
          18976,
          19023,
          18826,
          19236,
          19220,
          18194
        ],
        "name": "SmartTokenController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17811,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 17943,
            "src": "1107:24:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartToken_$18175",
              "typeString": "contract ISmartToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 17810,
              "name": "ISmartToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18175,
              "src": "1107:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                "typeString": "contract ISmartToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17813,
            "name": "bancorX",
            "nodeType": "VariableDeclaration",
            "scope": 17943,
            "src": "1164:22:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17812,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1164:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17825,
              "nodeType": "Block",
              "src": "1459:33:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17821,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17811
                      ],
                      "referencedDeclaration": 17811,
                      "src": "1470:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$18175",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17822,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17815,
                      "src": "1478:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$18175",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "src": "1470:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "id": 17824,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:14:61"
                }
              ]
            },
            "documentation": "@dev initializes a new SmartTokenController instance\r\n\r\n@param  _token      smart token governed by the controller\r",
            "id": 17826,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 17818,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17815,
                    "src": "1446:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  }
                ],
                "id": 17819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17817,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19008,
                  "src": "1433:12:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:20:61"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17815,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17826,
                  "src": "1388:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$18175",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 17814,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18175,
                    "src": "1388:11:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$18175",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1387:20:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:61"
            },
            "scope": 17943,
            "src": "1376:116:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17839,
              "nodeType": "Block",
              "src": "1575:70:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 17829,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                17811
                              ],
                              "referencedDeclaration": 17811,
                              "src": "1594:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 17830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19211,
                            "src": "1594:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 17831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1594:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17833,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19611,
                              "src": "1619:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 17832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1611:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 17834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1611:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1594:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "1586:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17837,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:39:61"
                },
                {
                  "id": 17838,
                  "nodeType": "PlaceholderStatement",
                  "src": "1636:1:61"
                }
              ]
            },
            "documentation": null,
            "id": 17840,
            "name": "active",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 17827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:2:61"
            },
            "src": "1557:88:61",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17853,
              "nodeType": "Block",
              "src": "1734:70:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 17843,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                17811
                              ],
                              "referencedDeclaration": 17811,
                              "src": "1753:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$18175",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 17844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19211,
                            "src": "1753:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 17845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1753:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17847,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19611,
                              "src": "1778:4:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$17943",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 17846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1770:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 17848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1753:30:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "1745:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:39:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17851,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:39:61"
                },
                {
                  "id": 17852,
                  "nodeType": "PlaceholderStatement",
                  "src": "1795:1:61"
                }
              ]
            },
            "documentation": null,
            "id": 17854,
            "name": "inactive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 17841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:2:61"
            },
            "src": "1714:90:61",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17867,
              "nodeType": "Block",
              "src": "2108:53:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17864,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17856,
                        "src": "2143:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17861,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "2119:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19216,
                      "src": "2119:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 17865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:34:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17866,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:34:61"
                }
              ]
            },
            "documentation": "@dev allows transferring the token ownership\r\nthe new owner needs to accept the transfer\r\ncan only be called by the contract owner\r\n\r\n@param _newOwner    new token owner\r",
            "id": 17868,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17858,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2098:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2098:9:61"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17856,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 17868,
                  "src": "2072:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2071:19:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:0:61"
            },
            "scope": 17943,
            "src": "2040:121:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17878,
              "nodeType": "Block",
              "src": "2356:42:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17873,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "2367:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "acceptOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19219,
                      "src": "2367:21:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 17876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:23:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17877,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:23:61"
                }
              ]
            },
            "documentation": "@dev used by a new owner to accept a token ownership transfer\r\ncan only be called by the contract owner\r",
            "id": 17879,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17871,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17870,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2346:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2346:9:61"
              }
            ],
            "name": "acceptTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:2:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:0:61"
            },
            "scope": 17943,
            "src": "2307:91:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17899,
              "nodeType": "Block",
              "src": "2808:75:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17894,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17881,
                        "src": "2854:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$18035",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17895,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17883,
                        "src": "2862:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17896,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17885,
                        "src": "2867:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$18035",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 17891,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              17811
                            ],
                            "referencedDeclaration": 17811,
                            "src": "2832:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISmartToken_$18175",
                              "typeString": "contract ISmartToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISmartToken_$18175",
                              "typeString": "contract ISmartToken"
                            }
                          ],
                          "id": 17890,
                          "name": "ITokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19236,
                          "src": "2819:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenHolder_$19236_$",
                            "typeString": "type(contract ITokenHolder)"
                          }
                        },
                        "id": 17892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2819:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenHolder_$19236",
                          "typeString": "contract ITokenHolder"
                        }
                      },
                      "id": 17893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19235,
                      "src": "2819:34:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Token_$18035_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Token,address,uint256) external"
                      }
                    },
                    "id": 17897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:56:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17898,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:56:61"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the controller and sends them to an account\r\ncan only be called by the owner\r\n\r\n@param _token   ERC20 token contract address\r\n@param _to      account to receive the new amount\r\n@param _amount  amount to withdraw\r",
            "id": 17900,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17888,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17887,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "2798:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2798:9:61"
              }
            ],
            "name": "withdrawFromToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17881,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2741:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$18035",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 17880,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18035,
                    "src": "2741:11:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$18035",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17883,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2761:11:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17885,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17900,
                  "src": "2774:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2740:50:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:0:61"
            },
            "scope": 17943,
            "src": "2714:169:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17929,
              "nodeType": "Block",
              "src": "3262:292:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 17908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19490,
                            "src": "3351:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3351:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17910,
                          "name": "bancorX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17813,
                          "src": "3365:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3351:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19493,
                        19494
                      ],
                      "referencedDeclaration": 19493,
                      "src": "3343:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17913,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:30:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17917,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17902,
                        "src": "3488:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17918,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17904,
                        "src": "3495:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17914,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "3474:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18174,
                      "src": "3474:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:29:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17920,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:29:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 17924,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19490,
                          "src": "3526:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3526:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17926,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17904,
                        "src": "3538:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17921,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          17811
                        ],
                        "referencedDeclaration": 17811,
                        "src": "3514:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$18175",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 17923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18167,
                      "src": "3514:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3514:32:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17928,
                  "nodeType": "ExpressionStatement",
                  "src": "3514:32:61"
                }
              ]
            },
            "documentation": "@dev allows the associated BancorX contract to claim tokens from any address (so that users\r\ndont have to first give allowance when calling BancorX)\r\n\r\n@param _from      address to claim the tokens from\r\n@param _amount    the amount of tokens to claim\r",
            "id": 17930,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claimTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17902,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 17930,
                  "src": "3223:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17904,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 17930,
                  "src": "3238:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3222:32:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3262:0:61"
            },
            "scope": 17943,
            "src": "3202:352:61",
            "stateMutability": "nonpayable",
            "superFunction": 18185,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17941,
              "nodeType": "Block",
              "src": "3750:37:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17937,
                      "name": "bancorX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17813,
                      "src": "3761:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17938,
                      "name": "_bancorX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17932,
                      "src": "3771:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3761:18:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17940,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:18:61"
                }
              ]
            },
            "documentation": "@dev allows the owner to set the associated BancorX contract\r\n@param _bancorX    BancorX contract\r",
            "id": 17942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 17935,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17934,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18781,
                  "src": "3740:9:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:9:61"
              }
            ],
            "name": "setBancorX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17932,
                  "name": "_bancorX",
                  "nodeType": "VariableDeclaration",
                  "scope": 17942,
                  "src": "3715:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3715:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3714:18:61"
            },
            "payable": false,
            "returnParameters": {
              "id": 17936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3750:0:61"
            },
            "scope": 17943,
            "src": "3695:92:61",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 17944,
        "src": "1032:2758:61"
      }
    ],
    "src": "0:3792:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-17T21:34:25.423Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer\r"
      },
      "acceptTokenOwnership()": {
        "details": "used by a new owner to accept a token ownership transfer\r can only be called by the contract owner\r"
      },
      "claimTokens(address,uint256)": {
        "details": "allows the associated BancorX contract to claim tokens from any address (so that users\r dont have to first give allowance when calling BancorX)\r \r",
        "params": {
          "_amount": "the amount of tokens to claim\r",
          "_from": "address to claim the tokens from\r"
        }
      },
      "setBancorX(address)": {
        "details": "allows the owner to set the associated BancorX contract\r",
        "params": {
          "_bancorX": "BancorX contract\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new contract owner\r"
        }
      },
      "transferTokenOwnership(address)": {
        "details": "allows transferring the token ownership\r the new owner needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new token owner\r"
        }
      },
      "withdrawFromToken(address,address,uint256)": {
        "details": "withdraws tokens held by the controller and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}